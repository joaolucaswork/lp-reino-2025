{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/card-info-mapper.ts", "../src/utils/card-updater.ts", "../node_modules/.pnpm/@finsweet+ts-utils@0.40.0/node_modules/@finsweet/ts-utils/dist/webflow/getPublishDate.js", "../src/utils/greet.ts", "../src/utils/card-rotation-manager.ts", "../src/utils/logo-card-toggle.ts", "../src/utils/profile-card-toggle.ts", "../src/utils/svg-illustration-generator.ts", "../node_modules/.pnpm/swiper@12.0.2/node_modules/swiper/shared/ssr-window.esm.mjs", "../node_modules/.pnpm/swiper@12.0.2/node_modules/swiper/shared/utils.mjs", "../node_modules/.pnpm/swiper@12.0.2/node_modules/swiper/shared/swiper-core.mjs", "../src/utils/swiper-controller.ts", "../src/utils/typebot-email-handler.ts", "../src/utils/typebot-name-replacer.ts", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "/**\n * Card Info Attribute Mapper\n *\n * Maps and manages all card-info attributes from the HTML structure.\n * Reference: webflow-source-files/index.html (lines 210-253)\n */\n\n/**\n * Card Info attribute types\n */\nexport enum CardInfoAttribute {\n  /** Main wrapper - controls background and text color */\n  BG_TEXT_COLOR = 'bg-text-color',\n  /** Name of the person/user */\n  NAME = 'name',\n  /** Title or role of the person */\n  TITLE = 'title',\n  /** Container for data elements (RC, mini block, date) */\n  ELEMENTS = 'elements',\n  /** Mini visual block indicator */\n  MINI = 'mini',\n  /** Registration/creation date */\n  DATE = 'date',\n  /** Central illustration element */\n  ILUSTRATION = 'ilustration',\n}\n\n/**\n * Card Info selector mapping\n */\nexport const CARD_INFO_SELECTORS = {\n  [CardInfoAttribute.BG_TEXT_COLOR]: '[card-info=\"bg-text-color\"]',\n  [CardInfoAttribute.NAME]: '[card-info=\"name\"]',\n  [CardInfoAttribute.TITLE]: '[card-info=\"title\"]',\n  [CardInfoAttribute.ELEMENTS]: '[card-info=\"elements\"]',\n  [CardInfoAttribute.MINI]: '[card-info=\"mini\"]',\n  [CardInfoAttribute.DATE]: '[card-info=\"date\"]',\n  [CardInfoAttribute.ILUSTRATION]: '[card-info=\"ilustration\"]',\n} as const;\n\n/**\n * Card Info element structure\n */\nexport interface CardInfoElements {\n  /** Main wrapper element (.profile-card_wrapper) */\n  wrapper: HTMLElement | null;\n  /** Name element (.name-people) */\n  name: HTMLElement | null;\n  /** Title element (.titulo-lead) */\n  title: HTMLElement | null;\n  /** Elements container (.info-data) */\n  elements: HTMLElement | null;\n  /** Mini block element (.visual-block-card) */\n  mini: HTMLElement | null;\n  /** Date element (.data-cadastro) */\n  date: HTMLElement | null;\n  /** Illustration element (.ilustration-center) */\n  ilustration: HTMLElement | null;\n}\n\n/**\n * Card data interface for updating card information\n */\nexport interface CardData {\n  /** User's name (default: \"******\") */\n  name?: string;\n  /** User's title/role (default: \"Investidor Explorador\") */\n  title?: string;\n  /** Registration date in DD.MM.YYYY format (default: \"07.10.2025\") */\n  date?: string;\n  /** Background and text color theme */\n  theme?: 'light' | 'dark' | string;\n}\n\n/**\n * Card Info Mapper Class\n */\nexport class CardInfoMapper {\n  private elements: CardInfoElements;\n\n  constructor() {\n    this.elements = this.queryAllElements();\n  }\n\n  /**\n   * Query all card-info elements from the DOM\n   * @returns CardInfoElements object with all queried elements\n   */\n  private queryAllElements(): CardInfoElements {\n    return {\n      wrapper: document.querySelector(CARD_INFO_SELECTORS[CardInfoAttribute.BG_TEXT_COLOR]),\n      name: document.querySelector(CARD_INFO_SELECTORS[CardInfoAttribute.NAME]),\n      title: document.querySelector(CARD_INFO_SELECTORS[CardInfoAttribute.TITLE]),\n      elements: document.querySelector(CARD_INFO_SELECTORS[CardInfoAttribute.ELEMENTS]),\n      mini: document.querySelector(CARD_INFO_SELECTORS[CardInfoAttribute.MINI]),\n      date: document.querySelector(CARD_INFO_SELECTORS[CardInfoAttribute.DATE]),\n      ilustration: document.querySelector(CARD_INFO_SELECTORS[CardInfoAttribute.ILUSTRATION]),\n    };\n  }\n\n  /**\n   * Get a specific card-info element\n   * @param attribute The card-info attribute to query\n   * @returns The HTML element or null if not found\n   */\n  public getElement(attribute: CardInfoAttribute): HTMLElement | null {\n    const elementMap: Record<CardInfoAttribute, keyof CardInfoElements> = {\n      [CardInfoAttribute.BG_TEXT_COLOR]: 'wrapper',\n      [CardInfoAttribute.NAME]: 'name',\n      [CardInfoAttribute.TITLE]: 'title',\n      [CardInfoAttribute.ELEMENTS]: 'elements',\n      [CardInfoAttribute.MINI]: 'mini',\n      [CardInfoAttribute.DATE]: 'date',\n      [CardInfoAttribute.ILUSTRATION]: 'ilustration',\n    };\n\n    const key = elementMap[attribute];\n    return this.elements[key] || null;\n  }\n\n  /**\n   * Get all card-info elements\n   * @returns CardInfoElements object\n   */\n  public getAllElements(): CardInfoElements {\n    return this.elements;\n  }\n\n  /**\n   * Refresh all element queries (useful after DOM updates)\n   */\n  public refresh(): void {\n    this.elements = this.queryAllElements();\n  }\n\n  /**\n   * Update card data\n   * @param data CardData object with values to update\n   */\n  public updateCard(data: CardData): void {\n    if (data.name && this.elements.name) {\n      this.elements.name.textContent = data.name;\n    }\n\n    if (data.title && this.elements.title) {\n      this.elements.title.textContent = data.title;\n    }\n\n    if (data.date && this.elements.date) {\n      this.elements.date.textContent = data.date;\n    }\n\n    if (data.theme && this.elements.wrapper) {\n      this.elements.wrapper.setAttribute('data-theme', data.theme);\n    }\n  }\n\n  /**\n   * Check if all required elements are present in the DOM\n   * @returns true if all elements exist, false otherwise\n   */\n  public validateElements(): boolean {\n    return Object.values(this.elements).every((element) => element !== null);\n  }\n\n  /**\n   * Get missing elements\n   * @returns Array of attribute names for missing elements\n   */\n  public getMissingElements(): CardInfoAttribute[] {\n    const missing: CardInfoAttribute[] = [];\n\n    Object.entries(this.elements).forEach(([key, element]) => {\n      if (element === null) {\n        missing.push(key as CardInfoAttribute);\n      }\n    });\n\n    return missing;\n  }\n}\n\n/**\n * Initialize and return a new CardInfoMapper instance\n * @returns CardInfoMapper instance\n */\nexport const initCardInfoMapper = (): CardInfoMapper => {\n  return new CardInfoMapper();\n};\n\n/**\n * Get an element by card-info attribute\n * @param attribute The card-info attribute value\n * @returns The HTML element or null\n */\nexport const getCardInfoElement = (attribute: CardInfoAttribute): HTMLElement | null => {\n  return document.querySelector(`[card-info=\"${attribute}\"]`);\n};\n\n/**\n * Get all elements with card-info attribute\n * @returns NodeList of all elements with card-info attribute\n */\nexport const getAllCardInfoElements = (): NodeListOf<HTMLElement> => {\n  return document.querySelectorAll('[card-info]');\n};\n", "import type { CardInfoMapper } from './card-info-mapper';\n\n/**\n * Format date to DD.MM.YYYY format\n * @param date The date to format\n * @returns Formatted date string\n */\nexport const formatDate = (date: Date): string => {\n  const day = String(date.getDate()).padStart(2, '0');\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const year = date.getFullYear();\n  return `${day}.${month}.${year}`;\n};\n\n/**\n * List of creative investor titles\n */\nexport const investorTitles = [\n  'Investidor Explorador',\n  'Investidor Estrat\u00E9gico',\n  'Investidor Vision\u00E1rio',\n  'Investidor Inovador',\n  'Investidor Consciente',\n  'Investidor Anal\u00EDtico',\n  'Investidor Empreendedor',\n  'Investidor Resiliente',\n] as const;\n\n/**\n * Rotate through investor titles\n * @param mapper The CardInfoMapper instance\n * @param intervalMs Interval in milliseconds between title changes\n * @returns Interval ID for cleanup\n */\nexport const startTitleRotation = (mapper: CardInfoMapper, intervalMs: number = 3000): number => {\n  let currentIndex = 0;\n\n  const rotateTitle = () => {\n    currentIndex = (currentIndex + 1) % investorTitles.length;\n    mapper.updateCard({ title: investorTitles[currentIndex] });\n  };\n\n  return window.setInterval(rotateTitle, intervalMs);\n};\n\n/**\n * Initialize card updates with current date and title rotation\n * @param mapper The CardInfoMapper instance\n * @param titleIntervalMs Interval in milliseconds for title rotation\n * @returns Interval ID for cleanup\n */\nexport const initCardUpdates = (mapper: CardInfoMapper, titleIntervalMs: number = 3000): number => {\n  // Update date with current system date\n  const currentDate = new Date();\n  const formattedDate = formatDate(currentDate);\n  mapper.updateCard({ date: formattedDate });\n\n  // Start title rotation\n  return startTitleRotation(mapper, titleIntervalMs);\n};\n", "/**\n * Extracts the publish date of a Webflow site\n * @returns A Date object, if found.\n * @param page The page to get the publish date from. Defaults to the current page.\n */\nexport const getPublishDate = (page = document) => {\n    const publishDatePrefix = 'Last Published:';\n    for (const node of page.childNodes) {\n        if (node.nodeType === Node.COMMENT_NODE && node.textContent?.includes(publishDatePrefix)) {\n            const publishDateValue = node.textContent.trim().split(publishDatePrefix)[1];\n            if (publishDateValue)\n                return new Date(publishDateValue);\n        }\n    }\n};\n", "import { getPublishDate } from '@finsweet/ts-utils';\n\n/**\n * Greets the user by printing a message in the console.\n * @param name The user's name.\n */\nexport const greetUser = (name: string) => {\n  const publishDate = getPublishDate();\n\n  console.log(`Hello ${name}!`);\n  console.log(\n    `This site was last published on ${publishDate?.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: '2-digit',\n    })}.`\n  );\n};\n", "/**\n * Card Rotation Manager\n *\n * Shared utility for managing card rotation animations.\n * Used by both email input handler and logo click handler.\n *\n * Rotation involves:\n * 1. Adding/removing 'rotate' class on profile card\n * 2. Toggling 'active' class between front and rotation elements\n * 3. Ensuring 'active_fill' class is present on profile card\n */\n\n/**\n * Configuration for card rotation\n */\nexport interface CardRotationConfig {\n  /** Selector for the profile card wrapper */\n  profileCardSelector?: string;\n  /** Selector for the front elements container */\n  frontElementsSelector?: string;\n  /** Selector for the rotation elements container */\n  rotationElementsSelector?: string;\n  /** Class to add to profile card for active state */\n  activeFillClass?: string;\n  /** Class to add to profile card to trigger rotation */\n  rotateClass?: string;\n  /** Class to toggle on front/rotation elements */\n  activeClass?: string;\n  /** Enable debug logging */\n  debug?: boolean;\n}\n\n/**\n * Default configuration\n */\nconst DEFAULT_CONFIG: Required<CardRotationConfig> = {\n  profileCardSelector: '.profile-card_wrapper',\n  frontElementsSelector: '.front-elements',\n  rotationElementsSelector: '.rotation-elements',\n  activeFillClass: 'active_fill',\n  rotateClass: 'rotate',\n  activeClass: 'active',\n  debug: false,\n};\n\n/**\n * Card rotation state\n */\nexport enum CardRotationState {\n  /** Card is showing front face */\n  FRONT = 'front',\n  /** Card is showing back face (rotated) */\n  BACK = 'back',\n}\n\n/**\n * CardRotationManager class\n * Manages card rotation animations and state\n */\nexport class CardRotationManager {\n  private config: Required<CardRotationConfig>;\n\n  constructor(config: CardRotationConfig = {}) {\n    this.config = { ...DEFAULT_CONFIG, ...config };\n  }\n\n  /**\n   * Get the current rotation state of the card\n   * @returns CardRotationState.FRONT or CardRotationState.BACK\n   */\n  public getRotationState(): CardRotationState {\n    const profileCard = document.querySelector(this.config.profileCardSelector);\n\n    if (!profileCard) {\n      this.log('Profile card not found, assuming FRONT state');\n      return CardRotationState.FRONT;\n    }\n\n    const hasRotateClass = profileCard.classList.contains(this.config.rotateClass);\n    return hasRotateClass ? CardRotationState.BACK : CardRotationState.FRONT;\n  }\n\n  /**\n   * Check if the card is currently rotated (showing back face)\n   * @returns true if card is showing back face, false otherwise\n   */\n  public isRotated(): boolean {\n    return this.getRotationState() === CardRotationState.BACK;\n  }\n\n  /**\n   * Rotate the card to show the back face\n   * @returns true if rotation was successful, false otherwise\n   */\n  public rotateToBack(): boolean {\n    this.log('Rotating card to show back face');\n\n    // Find the profile card element\n    const profileCard = document.querySelector(this.config.profileCardSelector);\n\n    if (!profileCard) {\n      this.log('Profile card not found with selector:', this.config.profileCardSelector);\n      return false;\n    }\n\n    // Ensure active_fill class is present (card should be active before rotating)\n    if (!profileCard.classList.contains(this.config.activeFillClass)) {\n      profileCard.classList.add(this.config.activeFillClass);\n      this.log(`Added ${this.config.activeFillClass} class to profile card`);\n    }\n\n    // Add rotate class to profile card\n    profileCard.classList.add(this.config.rotateClass);\n    this.log(`Added ${this.config.rotateClass} class to profile card`);\n\n    // Find front and rotation elements\n    const frontElements = document.querySelector(this.config.frontElementsSelector);\n    const rotationElements = document.querySelector(this.config.rotationElementsSelector);\n\n    if (!frontElements) {\n      this.log('Front elements not found with selector:', this.config.frontElementsSelector);\n    } else {\n      // Remove active class from front elements\n      frontElements.classList.remove(this.config.activeClass);\n      this.log(`Removed ${this.config.activeClass} class from front elements`);\n    }\n\n    if (!rotationElements) {\n      this.log('Rotation elements not found with selector:', this.config.rotationElementsSelector);\n    } else {\n      // Add active class to rotation elements\n      rotationElements.classList.add(this.config.activeClass);\n      this.log(`Added ${this.config.activeClass} class to rotation elements`);\n    }\n\n    this.log('Card rotation to back completed');\n    return true;\n  }\n\n  /**\n   * Rotate the card to show the front face\n   * @returns true if rotation was successful, false otherwise\n   */\n  public rotateToFront(): boolean {\n    this.log('Rotating card to show front face');\n\n    // Find the profile card element\n    const profileCard = document.querySelector(this.config.profileCardSelector);\n\n    if (!profileCard) {\n      this.log('Profile card not found with selector:', this.config.profileCardSelector);\n      return false;\n    }\n\n    // Remove rotate class from profile card\n    profileCard.classList.remove(this.config.rotateClass);\n    this.log(`Removed ${this.config.rotateClass} class from profile card`);\n\n    // Find front and rotation elements\n    const frontElements = document.querySelector(this.config.frontElementsSelector);\n    const rotationElements = document.querySelector(this.config.rotationElementsSelector);\n\n    if (!frontElements) {\n      this.log('Front elements not found with selector:', this.config.frontElementsSelector);\n    } else {\n      // Add active class to front elements\n      frontElements.classList.add(this.config.activeClass);\n      this.log(`Added ${this.config.activeClass} class to front elements`);\n    }\n\n    if (!rotationElements) {\n      this.log('Rotation elements not found with selector:', this.config.rotationElementsSelector);\n    } else {\n      // Remove active class from rotation elements\n      rotationElements.classList.remove(this.config.activeClass);\n      this.log(`Removed ${this.config.activeClass} class from rotation elements`);\n    }\n\n    this.log('Card rotation to front completed');\n    return true;\n  }\n\n  /**\n   * Toggle the card rotation (front <-> back)\n   * @returns The new rotation state after toggling\n   */\n  public toggleRotation(): CardRotationState {\n    const currentState = this.getRotationState();\n\n    if (currentState === CardRotationState.FRONT) {\n      this.rotateToBack();\n      return CardRotationState.BACK;\n    }\n    this.rotateToFront();\n    return CardRotationState.FRONT;\n  }\n\n  /**\n   * Log messages if debug mode is enabled\n   */\n  private log(...args: unknown[]): void {\n    if (this.config.debug) {\n      console.log('[CardRotationManager]', ...args);\n    }\n  }\n}\n\n/**\n * Create a new CardRotationManager instance\n * @param config Optional configuration\n * @returns CardRotationManager instance\n */\nexport function createCardRotationManager(config: CardRotationConfig = {}): CardRotationManager {\n  return new CardRotationManager(config);\n}\n\n/**\n * Rotate the card to show the back face (convenience function)\n * @param config Optional configuration\n * @returns true if rotation was successful\n */\nexport function rotateCardToBack(config: CardRotationConfig = {}): boolean {\n  const manager = new CardRotationManager(config);\n  return manager.rotateToBack();\n}\n\n/**\n * Rotate the card to show the front face (convenience function)\n * @param config Optional configuration\n * @returns true if rotation was successful\n */\nexport function rotateCardToFront(config: CardRotationConfig = {}): boolean {\n  const manager = new CardRotationManager(config);\n  return manager.rotateToFront();\n}\n\n/**\n * Toggle the card rotation (convenience function)\n * @param config Optional configuration\n * @returns The new rotation state\n */\nexport function toggleCardRotation(config: CardRotationConfig = {}): CardRotationState {\n  const manager = new CardRotationManager(config);\n  return manager.toggleRotation();\n}\n\n/**\n * Check if the card is currently rotated (convenience function)\n * @param config Optional configuration\n * @returns true if card is showing back face\n */\nexport function isCardRotated(config: CardRotationConfig = {}): boolean {\n  const manager = new CardRotationManager(config);\n  return manager.isRotated();\n}\n", "/**\n * Logo Card Toggle Handler\n *\n * Handles click interactions on the Reino Capital logo to toggle card rotation.\n * The logo appears on both the front and back faces of the card.\n *\n * Features:\n * - Click logo to rotate card (front -> back)\n * - Click logo again to reverse rotation (back -> front)\n * - Prevents event propagation to avoid triggering card click handler\n * - Uses shared CardRotationManager for consistent rotation behavior\n */\n\nimport { CardRotationManager, CardRotationState } from './card-rotation-manager';\n\n/**\n * Configuration for logo toggle handler\n */\ninterface LogoToggleConfig {\n  /** Selector for logo elements (both front and back) */\n  logoSelector?: string;\n  /** Enable debug logging */\n  debug?: boolean;\n}\n\n/**\n * Default configuration\n */\nconst DEFAULT_CONFIG: Required<LogoToggleConfig> = {\n  logoSelector: '.logo_card',\n  debug: false,\n};\n\n/**\n * LogoCardToggle class\n * Manages click interactions on logo elements to toggle card rotation\n */\nexport class LogoCardToggle {\n  private config: Required<LogoToggleConfig>;\n  private rotationManager: CardRotationManager;\n  private isInitialized = false;\n  private boundHandleClick: (event: Event) => void;\n\n  constructor(config: LogoToggleConfig = {}) {\n    this.config = { ...DEFAULT_CONFIG, ...config };\n    this.rotationManager = new CardRotationManager({ debug: this.config.debug });\n    this.boundHandleClick = this.handleLogoClick.bind(this);\n  }\n\n  /**\n   * Initialize the logo toggle handler\n   * Attaches click event listeners to all logo elements\n   */\n  public init(): void {\n    if (this.isInitialized) {\n      this.log('Logo toggle handler already initialized');\n      return;\n    }\n\n    this.attachEventListeners();\n    this.isInitialized = true;\n    this.log('Logo toggle handler initialized');\n  }\n\n  /**\n   * Attach click event listeners to all logo elements\n   */\n  private attachEventListeners(): void {\n    const logoElements = document.querySelectorAll<HTMLElement>(this.config.logoSelector);\n\n    if (logoElements.length === 0) {\n      this.log('No logo elements found with selector:', this.config.logoSelector);\n      return;\n    }\n\n    this.log(`Found ${logoElements.length} logo element(s) to attach listeners`);\n\n    logoElements.forEach((logo, index) => {\n      logo.addEventListener('click', this.boundHandleClick);\n      // Add cursor pointer to indicate clickability\n      logo.style.cursor = 'pointer';\n      this.log(`Attached click listener to logo element ${index + 1}`);\n    });\n  }\n\n  /**\n   * Handle click event on logo element\n   * @param event The click event\n   */\n  private handleLogoClick(event: Event): void {\n    // Stop event propagation to prevent triggering card click handler\n    event.stopPropagation();\n    event.preventDefault();\n\n    this.log('Logo clicked, toggling card rotation');\n\n    // Toggle the card rotation\n    const newState = this.rotationManager.toggleRotation();\n\n    this.log(`Card rotation toggled to: ${newState}`);\n\n    // Dispatch custom event for other components to listen to\n    this.dispatchRotationEvent(newState);\n  }\n\n  /**\n   * Dispatch a custom event when rotation state changes\n   * @param newState The new rotation state\n   */\n  private dispatchRotationEvent(newState: CardRotationState): void {\n    const event = new CustomEvent('card-rotation-toggle', {\n      detail: {\n        state: newState,\n        isRotated: newState === CardRotationState.BACK,\n      },\n      bubbles: true,\n    });\n\n    document.dispatchEvent(event);\n    this.log('Dispatched card-rotation-toggle event:', newState);\n  }\n\n  /**\n   * Get the current rotation state\n   * @returns The current rotation state\n   */\n  public getRotationState(): CardRotationState {\n    return this.rotationManager.getRotationState();\n  }\n\n  /**\n   * Check if the card is currently rotated\n   * @returns true if card is showing back face\n   */\n  public isRotated(): boolean {\n    return this.rotationManager.isRotated();\n  }\n\n  /**\n   * Manually rotate the card to show the back face\n   * @returns true if rotation was successful\n   */\n  public rotateToBack(): boolean {\n    const success = this.rotationManager.rotateToBack();\n    if (success) {\n      this.dispatchRotationEvent(CardRotationState.BACK);\n    }\n    return success;\n  }\n\n  /**\n   * Manually rotate the card to show the front face\n   * @returns true if rotation was successful\n   */\n  public rotateToFront(): boolean {\n    const success = this.rotationManager.rotateToFront();\n    if (success) {\n      this.dispatchRotationEvent(CardRotationState.FRONT);\n    }\n    return success;\n  }\n\n  /**\n   * Manually toggle the card rotation\n   * @returns The new rotation state\n   */\n  public toggle(): CardRotationState {\n    const newState = this.rotationManager.toggleRotation();\n    this.dispatchRotationEvent(newState);\n    return newState;\n  }\n\n  /**\n   * Remove event listeners and clean up\n   */\n  public destroy(): void {\n    const logoElements = document.querySelectorAll<HTMLElement>(this.config.logoSelector);\n\n    logoElements.forEach((logo, index) => {\n      logo.removeEventListener('click', this.boundHandleClick);\n      logo.style.cursor = '';\n      this.log(`Removed click listener from logo element ${index + 1}`);\n    });\n\n    this.isInitialized = false;\n    this.log('Logo toggle handler destroyed');\n  }\n\n  /**\n   * Log messages if debug mode is enabled\n   */\n  private log(...args: unknown[]): void {\n    if (this.config.debug) {\n      console.log('[LogoCardToggle]', ...args);\n    }\n  }\n}\n\n/**\n * Initialize the logo card toggle handler with default configuration\n * @param config Optional configuration\n * @returns LogoCardToggle instance\n */\nexport function initLogoCardToggle(config: LogoToggleConfig = {}): LogoCardToggle {\n  const toggle = new LogoCardToggle({\n    ...config,\n    debug: config.debug ?? true, // Enable debug logging by default\n  });\n\n  toggle.init();\n\n  return toggle;\n}\n\n/**\n * Listen for card rotation toggle events\n * @param callback Function to call when rotation state changes\n * @returns Function to remove the event listener\n */\nexport function onCardRotationToggle(\n  callback: (state: CardRotationState, isRotated: boolean) => void\n): () => void {\n  const handler = (event: Event) => {\n    const customEvent = event as CustomEvent<{ state: CardRotationState; isRotated: boolean }>;\n    callback(customEvent.detail.state, customEvent.detail.isRotated);\n  };\n\n  document.addEventListener('card-rotation-toggle', handler);\n\n  // Return cleanup function\n  return () => {\n    document.removeEventListener('card-rotation-toggle', handler);\n  };\n}\n", "/**\n * Profile Card Toggle Interaction\n *\n * Handles click interactions for profile card elements to toggle active state.\n * Reference: webflow-source-files/index.html (line 210)\n */\n\n/**\n * Configuration for additional elements to toggle\n */\ninterface AdditionalToggleElement {\n  /** CSS selector for the element (relative to profile card) */\n  selector: string;\n  /** Class name to toggle */\n  activeClass: string;\n}\n\n/**\n * Profile card wrapper selector\n */\nconst PROFILE_CARD_SELECTOR = '.profile-card_wrapper';\n\n/**\n * Active state class name for profile card\n */\nconst ACTIVE_CLASS = 'active_fill';\n\n/**\n * Additional elements to toggle when profile card is activated\n */\nconst ADDITIONAL_TOGGLE_ELEMENTS: AdditionalToggleElement[] = [\n  { selector: '.visual-block-card', activeClass: 'active' },\n  { selector: '.shadow-yellow', activeClass: 'active' },\n];\n\n/**\n * Extended HTMLElement interface with toggle state\n */\ninterface ProfileCardElement extends HTMLElement {\n  /** Toggle state counter (0 or 1) */\n  toggleState?: number;\n}\n\n/**\n * Toggle active state for all profile card elements\n * @param isActive Whether to add or remove the active class\n */\nconst toggleAllCards = (isActive: boolean): void => {\n  const cards = document.querySelectorAll<HTMLElement>(PROFILE_CARD_SELECTOR);\n  cards.forEach((card) => {\n    // Toggle active class on the profile card itself\n    if (isActive) {\n      card.classList.add(ACTIVE_CLASS);\n    } else {\n      card.classList.remove(ACTIVE_CLASS);\n    }\n\n    // Toggle active class on additional elements\n    ADDITIONAL_TOGGLE_ELEMENTS.forEach(({ selector, activeClass }) => {\n      const element = card.querySelector<HTMLElement>(selector);\n      if (element) {\n        if (isActive) {\n          element.classList.add(activeClass);\n        } else {\n          element.classList.remove(activeClass);\n        }\n      }\n    });\n  });\n};\n\n/**\n * Handle click event on profile card\n * @param event The click event\n */\nconst handleCardClick = (event: Event): void => {\n  const target = event.currentTarget as ProfileCardElement;\n\n  // Toggle state: 0 -> 1 -> 0 -> 1...\n  target.toggleState = ((target.toggleState || 0) + 1) % 2;\n\n  // Apply or remove active class based on toggle state\n  toggleAllCards(target.toggleState === 1);\n};\n\n/**\n * Initialize profile card toggle interactions\n * Attaches click event listeners to all profile card elements\n */\nexport const initProfileCardToggle = (): void => {\n  const cards = document.querySelectorAll<ProfileCardElement>(PROFILE_CARD_SELECTOR);\n\n  cards.forEach((card) => {\n    // Initialize toggle state\n    card.toggleState = 0;\n\n    // Attach click event listener\n    card.addEventListener('click', handleCardClick);\n  });\n};\n\n/**\n * Remove profile card toggle interactions\n * Removes click event listeners from all profile card elements\n */\nexport const destroyProfileCardToggle = (): void => {\n  const cards = document.querySelectorAll<ProfileCardElement>(PROFILE_CARD_SELECTOR);\n\n  cards.forEach((card) => {\n    card.removeEventListener('click', handleCardClick);\n    delete card.toggleState;\n  });\n};\n\n/**\n * Get current active state of profile cards\n * @returns true if cards are active, false otherwise\n */\nexport const isProfileCardActive = (): boolean => {\n  const card = document.querySelector<HTMLElement>(PROFILE_CARD_SELECTOR);\n  return card?.classList.contains(ACTIVE_CLASS) || false;\n};\n\n/**\n * Manually set active state for all profile cards\n * @param isActive Whether to activate or deactivate cards\n */\nexport const setProfileCardActive = (isActive: boolean): void => {\n  toggleAllCards(isActive);\n\n  // Update toggle state for all cards\n  const cards = document.querySelectorAll<ProfileCardElement>(PROFILE_CARD_SELECTOR);\n  cards.forEach((card) => {\n    card.toggleState = isActive ? 1 : 0;\n  });\n};\n", "/**\n * SVG Illustration Generator\n *\n * Transforms static illustration div elements into dynamic SVG elements\n * that display randomly generated abstract shapes on each page load.\n *\n * Features:\n * - Replaces [card-info=\"ilustration\"] div elements with SVG\n * - Generates unique abstract shapes using multiple algorithms\n * - Supports geometric polygons, organic blobs, and abstract forms\n * - Infinite variety through algorithmic generation\n * - Seeded random generation for reproducible testing\n * - Maintains existing styling and positioning\n */\n\n// ============================================================================\n// Types & Interfaces\n// ============================================================================\n\n/**\n * Configuration for SVG illustration generator\n */\nexport interface SVGIllustrationConfig {\n  /** Selector for illustration elements to replace */\n  illustrationSelector?: string;\n  /** SVG viewBox dimensions */\n  viewBox?: { width: number; height: number };\n  /** Brand color for shapes */\n  brandColor?: string;\n  /** Opacity range for shapes */\n  opacityRange?: { min: number; max: number };\n  /** Random seed for reproducible generation (testing) */\n  seed?: number;\n  /** Enable debug logging */\n  debug?: boolean;\n}\n\n/**\n * Shape generator function interface\n */\nexport interface ShapeGenerator {\n  /** Name of the shape generator */\n  name: string;\n  /** Generate SVG element(s) */\n  generate: (config: ShapeConfig) => SVGElement | SVGElement[];\n}\n\n/**\n * Configuration passed to shape generators\n */\nexport interface ShapeConfig {\n  /** Available width for the shape */\n  width: number;\n  /** Available height for the shape */\n  height: number;\n  /** Color to use for the shape */\n  color: string;\n  /** Opacity value */\n  opacity: number;\n  /** Random number generator instance */\n  random: SeededRandom;\n}\n\n/**\n * 2D point coordinates\n */\nexport interface Point {\n  x: number;\n  y: number;\n}\n\n/**\n * B\u00E9zier curve control point with handles\n */\nexport interface BezierControlPoint {\n  /** Main point position */\n  point: Point;\n  /** First control point (incoming curve) */\n  controlPoint1: Point;\n  /** Second control point (outgoing curve) */\n  controlPoint2: Point;\n}\n\n// ============================================================================\n// Default Configuration\n// ============================================================================\n\nconst DEFAULT_CONFIG: Required<SVGIllustrationConfig> = {\n  illustrationSelector: '[card-info=\"ilustration\"]',\n  viewBox: { width: 120, height: 120 },\n  brandColor: '#daa521',\n  opacityRange: { min: 0.3, max: 0.8 },\n  seed: Date.now(),\n  debug: false,\n};\n\n// ============================================================================\n// Seeded Random Number Generator\n// ============================================================================\n\n/**\n * Seeded random number generator for reproducible randomization\n * Uses Linear Congruential Generator (LCG) algorithm\n */\nexport class SeededRandom {\n  private seed: number;\n\n  /**\n   * Create a new seeded random generator\n   * @param seed Initial seed value (defaults to current timestamp)\n   */\n  constructor(seed?: number) {\n    this.seed = seed ?? Date.now();\n  }\n\n  /**\n   * Generate next random float between 0 and 1\n   * @returns Random float in range [0, 1)\n   */\n  public next(): number {\n    // LCG parameters (from Numerical Recipes)\n    const a = 1664525;\n    const c = 1013904223;\n    const m = 2 ** 32;\n\n    this.seed = (a * this.seed + c) % m;\n    return this.seed / m;\n  }\n\n  /**\n   * Generate random integer between min and max (inclusive)\n   * @param min Minimum value (inclusive)\n   * @param max Maximum value (inclusive)\n   * @returns Random integer in range [min, max]\n   */\n  public nextInt(min: number, max: number): number {\n    return Math.floor(this.next() * (max - min + 1)) + min;\n  }\n\n  /**\n   * Generate random float between min and max\n   * @param min Minimum value\n   * @param max Maximum value\n   * @returns Random float in range [min, max)\n   */\n  public nextFloat(min: number, max: number): number {\n    return this.next() * (max - min) + min;\n  }\n\n  /**\n   * Select random item from array\n   * @param array Array to select from\n   * @returns Random item from array\n   */\n  public choice<T>(array: T[]): T {\n    return array[this.nextInt(0, array.length - 1)];\n  }\n}\n\n// ============================================================================\n// SVG Builder Utilities\n// ============================================================================\n\n/**\n * Create an SVG element with specified attributes\n * @param tag SVG element tag name\n * @param attributes Object containing attribute key-value pairs\n * @returns Created SVG element\n */\nfunction createSVGElement(tag: string, attributes: Record<string, string | number>): SVGElement {\n  const element = document.createElementNS('http://www.w3.org/2000/svg', tag);\n\n  Object.entries(attributes).forEach(([key, value]) => {\n    element.setAttribute(key, String(value));\n  });\n\n  return element;\n}\n\n/**\n * Convert array of points to SVG path data string\n * @param points Array of points\n * @param closed Whether to close the path\n * @returns SVG path data string\n */\nfunction pointsToPathData(points: Point[], closed: boolean): string {\n  if (points.length === 0) return '';\n\n  let pathData = `M ${points[0].x} ${points[0].y}`;\n\n  for (let i = 1; i < points.length; i++) {\n    pathData += ` L ${points[i].x} ${points[i].y}`;\n  }\n\n  if (closed) {\n    pathData += ' Z';\n  }\n\n  return pathData;\n}\n\n/**\n * Generate polygon vertices with optional irregularity\n * @param sides Number of polygon sides\n * @param centerX Center X coordinate\n * @param centerY Center Y coordinate\n * @param radius Polygon radius\n * @param rotation Rotation angle in degrees\n * @param irregularity Amount of irregularity (0-1)\n * @returns Array of polygon vertices\n */\nfunction createPolygonPath(\n  sides: number,\n  centerX: number,\n  centerY: number,\n  radius: number,\n  rotation: number,\n  irregularity: number\n): Point[] {\n  const points: Point[] = [];\n  const angleStep = (Math.PI * 2) / sides;\n  const rotationRad = (rotation * Math.PI) / 180;\n\n  for (let i = 0; i < sides; i++) {\n    const angle = angleStep * i + rotationRad;\n    // Add irregularity by varying the radius slightly\n    const irregularOffset = irregularity * (Math.random() - 0.5) * radius;\n    const r = radius + irregularOffset;\n\n    points.push({\n      x: centerX + r * Math.cos(angle),\n      y: centerY + r * Math.sin(angle),\n    });\n  }\n\n  return points;\n}\n\n/**\n * Create SVG path data from B\u00E9zier control points\n * @param points Array of B\u00E9zier control points\n * @param closed Whether to close the path\n * @returns SVG path data string\n */\nfunction createBezierPath(points: BezierControlPoint[], closed: boolean): string {\n  if (points.length === 0) return '';\n\n  const first = points[0];\n  let pathData = `M ${first.point.x} ${first.point.y}`;\n\n  for (let i = 1; i < points.length; i++) {\n    const prev = points[i - 1];\n    const curr = points[i];\n\n    pathData += ` C ${prev.controlPoint2.x} ${prev.controlPoint2.y}, ${curr.controlPoint1.x} ${curr.controlPoint1.y}, ${curr.point.x} ${curr.point.y}`;\n  }\n\n  if (closed && points.length > 1) {\n    const last = points[points.length - 1];\n    pathData += ` C ${last.controlPoint2.x} ${last.controlPoint2.y}, ${first.controlPoint1.x} ${first.controlPoint1.y}, ${first.point.x} ${first.point.y}`;\n  }\n\n  if (closed) {\n    pathData += ' Z';\n  }\n\n  return pathData;\n}\n\n// ============================================================================\n// Shape Generators\n// ============================================================================\n\n/**\n * Generate a star shape with rounded points\n * Creates stars with 4-12 points, random scale, rotation, and distortion\n * @param config Shape configuration\n * @returns SVG path element\n */\nfunction generateRoundedStar(config: ShapeConfig): SVGElement {\n  const { width, height, color, opacity, random } = config;\n\n  // Random parameters\n  const points = random.nextInt(4, 12); // Number of star points\n  const scale = random.nextFloat(0.6, 1.0);\n  const rotation = random.nextFloat(0, 360);\n  const innerRadiusRatio = random.nextFloat(0.3, 0.6); // How deep the star points go\n  const pointDistortion = random.nextFloat(0, 0.3); // Distortion on individual points\n  const roundness = random.nextFloat(0.1, 0.4); // How rounded the points are\n\n  const centerX = width / 2;\n  const centerY = height / 2;\n  const outerRadius = (Math.min(width, height) / 2) * scale;\n  const innerRadius = outerRadius * innerRadiusRatio;\n\n  // Generate star points with B\u00E9zier curves for roundness\n  const bezierPoints: BezierControlPoint[] = [];\n  const angleStep = (Math.PI * 2) / points;\n  const rotationRad = (rotation * Math.PI) / 180;\n\n  for (let i = 0; i < points; i++) {\n    // Outer point (tip of star)\n    const outerAngle = angleStep * i + rotationRad;\n    const distortion = random.nextFloat(-pointDistortion, pointDistortion);\n    const distortedOuterRadius = outerRadius * (1 + distortion);\n\n    const outerPoint: Point = {\n      x: centerX + distortedOuterRadius * Math.cos(outerAngle),\n      y: centerY + distortedOuterRadius * Math.sin(outerAngle),\n    };\n\n    // Inner point (valley between star points)\n    const innerAngle = outerAngle + angleStep / 2;\n    const innerDistortion = random.nextFloat(-pointDistortion, pointDistortion);\n    const distortedInnerRadius = innerRadius * (1 + innerDistortion);\n\n    const innerPoint: Point = {\n      x: centerX + distortedInnerRadius * Math.cos(innerAngle),\n      y: centerY + distortedInnerRadius * Math.sin(innerAngle),\n    };\n\n    // Calculate control points for rounded outer point\n    const controlDistance = distortedOuterRadius * roundness;\n    const prevAngle = outerAngle - angleStep / 4;\n    const nextAngle = outerAngle + angleStep / 4;\n\n    const outerControl1: Point = {\n      x: outerPoint.x + controlDistance * Math.cos(prevAngle),\n      y: outerPoint.y + controlDistance * Math.sin(prevAngle),\n    };\n\n    const outerControl2: Point = {\n      x: outerPoint.x + controlDistance * Math.cos(nextAngle),\n      y: outerPoint.y + controlDistance * Math.sin(nextAngle),\n    };\n\n    bezierPoints.push({\n      point: outerPoint,\n      controlPoint1: outerControl1,\n      controlPoint2: outerControl2,\n    });\n\n    // Add inner point with slight rounding\n    const innerControlDistance = distortedInnerRadius * roundness * 0.5;\n    const innerPrevAngle = innerAngle - angleStep / 4;\n    const innerNextAngle = innerAngle + angleStep / 4;\n\n    const innerControl1: Point = {\n      x: innerPoint.x + innerControlDistance * Math.cos(innerPrevAngle),\n      y: innerPoint.y + innerControlDistance * Math.sin(innerPrevAngle),\n    };\n\n    const innerControl2: Point = {\n      x: innerPoint.x + innerControlDistance * Math.cos(innerNextAngle),\n      y: innerPoint.y + innerControlDistance * Math.sin(innerNextAngle),\n    };\n\n    bezierPoints.push({\n      point: innerPoint,\n      controlPoint1: innerControl1,\n      controlPoint2: innerControl2,\n    });\n  }\n\n  const pathData = createBezierPath(bezierPoints, true);\n\n  return createSVGElement('path', {\n    d: pathData,\n    fill: color,\n    'fill-opacity': opacity,\n  });\n}\n\n/**\n * Generate a star with subtle variations\n * Creates stars with slight variations in point length and roundness\n * @param config Shape configuration\n * @returns SVG path element\n */\nfunction generateVariantStar(config: ShapeConfig): SVGElement {\n  const { width, height, color, opacity, random } = config;\n\n  // Random parameters with more variation\n  const points = random.nextInt(5, 10); // 5-10 points\n  const scale = random.nextFloat(0.65, 0.95);\n  const rotation = random.nextFloat(0, 360);\n  const innerRadiusRatio = random.nextFloat(0.35, 0.55);\n  const pointDistortion = random.nextFloat(0.1, 0.4); // More distortion\n  const roundness = random.nextFloat(0.15, 0.35);\n\n  const centerX = width / 2;\n  const centerY = height / 2;\n  const outerRadius = (Math.min(width, height) / 2) * scale;\n  const innerRadius = outerRadius * innerRadiusRatio;\n\n  const bezierPoints: BezierControlPoint[] = [];\n  const angleStep = (Math.PI * 2) / points;\n  const rotationRad = (rotation * Math.PI) / 180;\n\n  for (let i = 0; i < points; i++) {\n    const outerAngle = angleStep * i + rotationRad;\n    const distortion = random.nextFloat(-pointDistortion, pointDistortion);\n    const distortedOuterRadius = outerRadius * (1 + distortion);\n\n    const outerPoint: Point = {\n      x: centerX + distortedOuterRadius * Math.cos(outerAngle),\n      y: centerY + distortedOuterRadius * Math.sin(outerAngle),\n    };\n\n    const innerAngle = outerAngle + angleStep / 2;\n    const innerDistortion = random.nextFloat(-pointDistortion, pointDistortion);\n    const distortedInnerRadius = innerRadius * (1 + innerDistortion);\n\n    const innerPoint: Point = {\n      x: centerX + distortedInnerRadius * Math.cos(innerAngle),\n      y: centerY + distortedInnerRadius * Math.sin(innerAngle),\n    };\n\n    const controlDistance = distortedOuterRadius * roundness;\n    const prevAngle = outerAngle - angleStep / 4;\n    const nextAngle = outerAngle + angleStep / 4;\n\n    bezierPoints.push({\n      point: outerPoint,\n      controlPoint1: {\n        x: outerPoint.x + controlDistance * Math.cos(prevAngle),\n        y: outerPoint.y + controlDistance * Math.sin(prevAngle),\n      },\n      controlPoint2: {\n        x: outerPoint.x + controlDistance * Math.cos(nextAngle),\n        y: outerPoint.y + controlDistance * Math.sin(nextAngle),\n      },\n    });\n\n    const innerControlDistance = distortedInnerRadius * roundness * 0.5;\n    const innerPrevAngle = innerAngle - angleStep / 4;\n    const innerNextAngle = innerAngle + angleStep / 4;\n\n    bezierPoints.push({\n      point: innerPoint,\n      controlPoint1: {\n        x: innerPoint.x + innerControlDistance * Math.cos(innerPrevAngle),\n        y: innerPoint.y + innerControlDistance * Math.sin(innerPrevAngle),\n      },\n      controlPoint2: {\n        x: innerPoint.x + innerControlDistance * Math.cos(innerNextAngle),\n        y: innerPoint.y + innerControlDistance * Math.sin(innerNextAngle),\n      },\n    });\n  }\n\n  const pathData = createBezierPath(bezierPoints, true);\n\n  return createSVGElement('path', {\n    d: pathData,\n    fill: color,\n    'fill-opacity': opacity,\n  });\n}\n\n/**\n * Generate a star with extreme distortion\n * Creates stars with more dramatic variations in point lengths\n * @param config Shape configuration\n * @returns SVG path element\n */\nfunction generateDistortedStar(config: ShapeConfig): SVGElement {\n  const { width, height, color, opacity, random } = config;\n\n  // Random parameters with extreme variation\n  const points = random.nextInt(4, 8); // 4-8 points\n  const scale = random.nextFloat(0.7, 1.0);\n  const rotation = random.nextFloat(0, 360);\n  const innerRadiusRatio = random.nextFloat(0.25, 0.5);\n  const pointDistortion = random.nextFloat(0.2, 0.6); // Extreme distortion\n  const roundness = random.nextFloat(0.2, 0.5);\n\n  const centerX = width / 2;\n  const centerY = height / 2;\n  const outerRadius = (Math.min(width, height) / 2) * scale;\n  const innerRadius = outerRadius * innerRadiusRatio;\n\n  const bezierPoints: BezierControlPoint[] = [];\n  const angleStep = (Math.PI * 2) / points;\n  const rotationRad = (rotation * Math.PI) / 180;\n\n  for (let i = 0; i < points; i++) {\n    const outerAngle = angleStep * i + rotationRad;\n    const distortion = random.nextFloat(-pointDistortion, pointDistortion);\n    const distortedOuterRadius = outerRadius * (1 + distortion);\n\n    const outerPoint: Point = {\n      x: centerX + distortedOuterRadius * Math.cos(outerAngle),\n      y: centerY + distortedOuterRadius * Math.sin(outerAngle),\n    };\n\n    const innerAngle = outerAngle + angleStep / 2;\n    const innerDistortion = random.nextFloat(-pointDistortion, pointDistortion);\n    const distortedInnerRadius = innerRadius * (1 + innerDistortion);\n\n    const innerPoint: Point = {\n      x: centerX + distortedInnerRadius * Math.cos(innerAngle),\n      y: centerY + distortedInnerRadius * Math.sin(innerAngle),\n    };\n\n    const controlDistance = distortedOuterRadius * roundness;\n    const prevAngle = outerAngle - angleStep / 4;\n    const nextAngle = outerAngle + angleStep / 4;\n\n    bezierPoints.push({\n      point: outerPoint,\n      controlPoint1: {\n        x: outerPoint.x + controlDistance * Math.cos(prevAngle),\n        y: outerPoint.y + controlDistance * Math.sin(prevAngle),\n      },\n      controlPoint2: {\n        x: outerPoint.x + controlDistance * Math.cos(nextAngle),\n        y: outerPoint.y + controlDistance * Math.sin(nextAngle),\n      },\n    });\n\n    const innerControlDistance = distortedInnerRadius * roundness * 0.5;\n    const innerPrevAngle = innerAngle - angleStep / 4;\n    const innerNextAngle = innerAngle + angleStep / 4;\n\n    bezierPoints.push({\n      point: innerPoint,\n      controlPoint1: {\n        x: innerPoint.x + innerControlDistance * Math.cos(innerPrevAngle),\n        y: innerPoint.y + innerControlDistance * Math.sin(innerPrevAngle),\n      },\n      controlPoint2: {\n        x: innerPoint.x + innerControlDistance * Math.cos(innerNextAngle),\n        y: innerPoint.y + innerControlDistance * Math.sin(innerNextAngle),\n      },\n    });\n  }\n\n  const pathData = createBezierPath(bezierPoints, true);\n\n  return createSVGElement('path', {\n    d: pathData,\n    fill: color,\n    'fill-opacity': opacity,\n  });\n}\n\n// ============================================================================\n// Main SVGIllustrationGenerator Class\n// ============================================================================\n\n/**\n * SVG Illustration Generator\n * Main class for replacing illustration divs with dynamic SVG shapes\n */\nexport class SVGIllustrationGenerator {\n  private config: Required<SVGIllustrationConfig>;\n  private random: SeededRandom;\n  private shapeGenerators: ShapeGenerator[];\n\n  /**\n   * Create a new SVG illustration generator\n   * @param config Optional configuration (merged with defaults)\n   */\n  constructor(config: SVGIllustrationConfig = {}) {\n    this.config = { ...DEFAULT_CONFIG, ...config };\n    this.random = new SeededRandom(this.config.seed);\n\n    // Initialize shape generators - all star variations\n    this.shapeGenerators = [\n      { name: 'Rounded Star', generate: generateRoundedStar },\n      { name: 'Variant Star', generate: generateVariantStar },\n      { name: 'Distorted Star', generate: generateDistortedStar },\n    ];\n  }\n\n  /**\n   * Initialize and replace all illustration elements\n   */\n  public init(): void {\n    try {\n      this.log('Initializing SVG Illustration Generator...');\n      const startTime = performance.now();\n\n      this.replaceIllustrationElements();\n\n      const endTime = performance.now();\n      this.log(`Initialization complete in ${(endTime - startTime).toFixed(2)}ms`);\n    } catch (error) {\n      this.handleError('Initialization failed', error as Error);\n    }\n  }\n\n  /**\n   * Regenerate all star illustrations with new random shapes\n   * Useful for refreshing illustrations without page reload\n   */\n  public regenerate(): void {\n    try {\n      this.log('Regenerating star illustrations...');\n      const startTime = performance.now();\n\n      // Reset random generator with new seed for different shapes\n      this.random = new SeededRandom(Date.now());\n\n      // Find all existing SVG illustrations and regenerate them\n      const svgElements = document.querySelectorAll<SVGSVGElement>(\n        `${this.config.illustrationSelector}`\n      );\n\n      if (svgElements.length === 0) {\n        this.log('No illustration elements found to regenerate');\n        return;\n      }\n\n      this.log(`Regenerating ${svgElements.length} illustration(s)`);\n\n      svgElements.forEach((svgElement, index) => {\n        try {\n          const hasRotationClass = svgElement.classList.contains('rotation');\n\n          // Clear existing content\n          while (svgElement.firstChild) {\n            svgElement.removeChild(svgElement.firstChild);\n          }\n\n          // Generate new shape\n          const { viewBox, brandColor, opacityRange } = this.config;\n          const shapeConfig: ShapeConfig = {\n            width: viewBox.width,\n            height: viewBox.height,\n            color: brandColor,\n            opacity: this.random.nextFloat(opacityRange.min, opacityRange.max),\n            random: this.random,\n          };\n\n          const shape = this.selectAndGenerateShape(shapeConfig);\n\n          // Append new shape(s) to SVG\n          if (Array.isArray(shape)) {\n            shape.forEach((s) => svgElement.appendChild(s));\n          } else {\n            svgElement.appendChild(shape);\n          }\n\n          this.log(`Regenerated illustration ${index + 1}/${svgElements.length}`);\n        } catch (error) {\n          this.handleError(`Failed to regenerate element ${index + 1}`, error as Error);\n        }\n      });\n\n      const endTime = performance.now();\n      this.log(`Regeneration complete in ${(endTime - startTime).toFixed(2)}ms`);\n    } catch (error) {\n      this.handleError('Regeneration failed', error as Error);\n    }\n  }\n\n  /**\n   * Find and replace illustration div elements with SVG\n   */\n  private replaceIllustrationElements(): void {\n    const elements = document.querySelectorAll<HTMLElement>(this.config.illustrationSelector);\n\n    if (elements.length === 0) {\n      this.log('No illustration elements found');\n      return;\n    }\n\n    this.log(`Found ${elements.length} illustration element(s)`);\n\n    elements.forEach((element, index) => {\n      try {\n        const hasRotationClass = element.classList.contains('rotation');\n        const svg = this.createSVGElement(hasRotationClass);\n\n        // Copy attributes from div to SVG\n        Array.from(element.attributes).forEach((attr) => {\n          svg.setAttribute(attr.name, attr.value);\n        });\n\n        // Replace div with SVG\n        element.parentNode?.replaceChild(svg, element);\n\n        this.log(`Replaced illustration element ${index + 1}/${elements.length}`);\n      } catch (error) {\n        this.handleError(`Failed to replace element ${index + 1}`, error as Error);\n      }\n    });\n  }\n\n  /**\n   * Create an SVG element with generated shape\n   * @param hasRotationClass Whether the element has rotation class (affects shape selection)\n   * @returns Complete SVG element with shape\n   */\n  private createSVGElement(hasRotationClass: boolean): SVGSVGElement {\n    const { viewBox, brandColor, opacityRange } = this.config;\n\n    // Create SVG container\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg') as SVGSVGElement;\n    svg.setAttribute('viewBox', `0 0 ${viewBox.width} ${viewBox.height}`);\n    svg.setAttribute('width', '100%');\n    svg.setAttribute('height', '100%');\n    svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n\n    // Generate shape\n    const shapeConfig: ShapeConfig = {\n      width: viewBox.width,\n      height: viewBox.height,\n      color: brandColor,\n      opacity: this.random.nextFloat(opacityRange.min, opacityRange.max),\n      random: this.random,\n    };\n\n    const shape = this.selectAndGenerateShape(shapeConfig);\n\n    // Append shape(s) to SVG\n    if (Array.isArray(shape)) {\n      shape.forEach((s) => svg.appendChild(s));\n    } else {\n      svg.appendChild(shape);\n    }\n\n    return svg;\n  }\n\n  /**\n   * Select a random shape generator and generate shape\n   * @param config Shape configuration\n   * @returns Generated SVG element(s)\n   */\n  private selectAndGenerateShape(config: ShapeConfig): SVGElement | SVGElement[] {\n    try {\n      const generator = this.random.choice(this.shapeGenerators);\n      this.log(`Selected generator: ${generator.name}`);\n\n      const startTime = performance.now();\n      const shape = generator.generate(config);\n      const endTime = performance.now();\n\n      this.log(`Shape generated in ${(endTime - startTime).toFixed(2)}ms`);\n\n      return shape;\n    } catch (error) {\n      this.handleError('Shape generation failed, falling back to circle', error as Error);\n\n      // Fallback to simple circle\n      return createSVGElement('circle', {\n        cx: config.width / 2,\n        cy: config.height / 2,\n        r: Math.min(config.width, config.height) / 3,\n        fill: config.color,\n        'fill-opacity': config.opacity,\n      });\n    }\n  }\n\n  /**\n   * Log debug messages\n   * @param args Arguments to log\n   */\n  private log(...args: unknown[]): void {\n    if (this.config.debug) {\n      console.log('[SVGIllustration]', ...args);\n    }\n  }\n\n  /**\n   * Handle and log errors\n   * @param context Error context\n   * @param error Error object\n   */\n  private handleError(context: string, error: Error): void {\n    if (this.config.debug) {\n      console.error(`[SVGIllustration] ${context}:`, error);\n    }\n  }\n}\n\n// ============================================================================\n// Public API\n// ============================================================================\n\n/**\n * Initialize SVG illustration generator with optional configuration\n * Also sets up listener for card rotation events to regenerate stars\n * @param config Optional configuration\n * @returns SVGIllustrationGenerator instance\n */\nexport function initSVGIllustration(config: SVGIllustrationConfig = {}): SVGIllustrationGenerator {\n  const generator = new SVGIllustrationGenerator(config);\n  generator.init();\n\n  // Listen for card rotation toggle events to regenerate stars\n  document.addEventListener('card-rotation-toggle', () => {\n    if (config.debug) {\n      console.log('[SVGIllustration] Card rotation detected, regenerating stars...');\n    }\n    generator.regenerate();\n  });\n\n  return generator;\n}\n", "/**\n * SSR Window 5.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2025, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: June 27, 2025\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object' && 'constructor' in obj && obj.constructor === Object;\n}\nfunction extend(target = {}, src = {}) {\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  Object.keys(src).filter(key => noExtend.indexOf(key) < 0).forEach(key => {\n    if (typeof target[key] === 'undefined') target[key] = src[key];else if (isObject(src[key]) && isObject(target[key]) && Object.keys(src[key]).length > 0) {\n      extend(target[key], src[key]);\n    }\n  });\n}\nconst ssrDocument = {\n  body: {},\n  addEventListener() {},\n  removeEventListener() {},\n  activeElement: {\n    blur() {},\n    nodeName: ''\n  },\n  querySelector() {\n    return null;\n  },\n  querySelectorAll() {\n    return [];\n  },\n  getElementById() {\n    return null;\n  },\n  createEvent() {\n    return {\n      initEvent() {}\n    };\n  },\n  createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute() {},\n      getElementsByTagName() {\n        return [];\n      }\n    };\n  },\n  createElementNS() {\n    return {};\n  },\n  importNode() {\n    return null;\n  },\n  location: {\n    hash: '',\n    host: '',\n    hostname: '',\n    href: '',\n    origin: '',\n    pathname: '',\n    protocol: '',\n    search: ''\n  }\n};\nfunction getDocument() {\n  const doc = typeof document !== 'undefined' ? document : {};\n  extend(doc, ssrDocument);\n  return doc;\n}\nconst ssrWindow = {\n  document: ssrDocument,\n  navigator: {\n    userAgent: ''\n  },\n  location: {\n    hash: '',\n    host: '',\n    hostname: '',\n    href: '',\n    origin: '',\n    pathname: '',\n    protocol: '',\n    search: ''\n  },\n  history: {\n    replaceState() {},\n    pushState() {},\n    go() {},\n    back() {}\n  },\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener() {},\n  removeEventListener() {},\n  getComputedStyle() {\n    return {\n      getPropertyValue() {\n        return '';\n      }\n    };\n  },\n  Image() {},\n  Date() {},\n  screen: {},\n  setTimeout() {},\n  clearTimeout() {},\n  matchMedia() {\n    return {};\n  },\n  requestAnimationFrame(callback) {\n    if (typeof setTimeout === 'undefined') {\n      callback();\n      return null;\n    }\n    return setTimeout(callback, 0);\n  },\n  cancelAnimationFrame(id) {\n    if (typeof setTimeout === 'undefined') {\n      return;\n    }\n    clearTimeout(id);\n  }\n};\nfunction getWindow() {\n  const win = typeof window !== 'undefined' ? window : {};\n  extend(win, ssrWindow);\n  return win;\n}\n\nexport { getWindow as a, getDocument as g };\n", "import { a as getWindow, g as getDocument } from './ssr-window.esm.mjs';\n\nfunction classesToTokens(classes = '') {\n  return classes.trim().split(' ').filter(c => !!c.trim());\n}\n\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowRoot && slideEl.shadowRoot.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction elementChildren(element, selector = '') {\n  const window = getWindow();\n  const children = [...element.children];\n  if (window.HTMLSlotElement && element instanceof HTMLSlotElement) {\n    children.push(...element.assignedElements());\n  }\n  if (!selector) {\n    return children;\n  }\n  return children.filter(el => el.matches(selector));\n}\nfunction elementIsChildOfSlot(el, slot) {\n  // Breadth-first search through all parent's children and assigned elements\n  const elementsQueue = [slot];\n  while (elementsQueue.length > 0) {\n    const elementToCheck = elementsQueue.shift();\n    if (el === elementToCheck) {\n      return true;\n    }\n    elementsQueue.push(...elementToCheck.children, ...(elementToCheck.shadowRoot ? elementToCheck.shadowRoot.children : []), ...(elementToCheck.assignedElements ? elementToCheck.assignedElements() : []));\n  }\n}\nfunction elementIsChildOf(el, parent) {\n  const window = getWindow();\n  let isChild = parent.contains(el);\n  if (!isChild && window.HTMLSlotElement && parent instanceof HTMLSlotElement) {\n    const children = [...parent.assignedElements()];\n    isChild = children.includes(el);\n    if (!isChild) {\n      isChild = elementIsChildOfSlot(el, parent);\n    }\n  }\n  return isChild;\n}\nfunction showWarning(text) {\n  try {\n    console.warn(text);\n    return;\n  } catch (err) {\n    // err\n  }\n}\nfunction createElement(tag, classes = []) {\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : classesToTokens(classes)));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nfunction makeElementsArray(el) {\n  return (Array.isArray(el) ? el : [el]).filter(e => !!e);\n}\nfunction getRotateFix(swiper) {\n  return v => {\n    if (Math.abs(v) > 0 && swiper.browser && swiper.browser.need3dFix && Math.abs(v) % 90 === 0) {\n      return v + 0.001;\n    }\n    return v;\n  };\n}\nfunction setInnerHTML(el, html = '') {\n  if (typeof trustedTypes !== 'undefined') {\n    el.innerHTML = trustedTypes.createPolicy('html', {\n      createHTML: s => s\n    }).createHTML(html);\n  } else {\n    el.innerHTML = html;\n  }\n}\n\nexport { setCSSProperty as a, elementParents as b, createElement as c, elementOffset as d, elementChildren as e, now as f, getSlideTransformEl as g, elementOuterSize as h, elementIndex as i, classesToTokens as j, getTranslate as k, elementTransitionEnd as l, makeElementsArray as m, nextTick as n, isObject as o, getRotateFix as p, elementStyle as q, elementNextAll as r, setInnerHTML as s, elementPrevAll as t, animateCSSModeScroll as u, showWarning as v, elementIsChildOf as w, extend as x, deleteProps as y };\n", "import { a as getWindow, g as getDocument } from './ssr-window.esm.mjs';\nimport { b as elementParents, q as elementStyle, e as elementChildren, a as setCSSProperty, h as elementOuterSize, r as elementNextAll, t as elementPrevAll, k as getTranslate, u as animateCSSModeScroll, n as nextTick, v as showWarning, c as createElement, w as elementIsChildOf, f as now, x as extend, i as elementIndex, y as deleteProps } from './utils.mjs';\n\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && document.documentElement.style && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\n\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad)(?!\\1).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\n\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  const device = getDevice();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  const isWebView = /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent);\n  const isSafariBrowser = isSafari();\n  const need3dFix = isSafariBrowser || isWebView && device.ios;\n  return {\n    isSafari: needPerspectiveFix || isSafariBrowser,\n    needPerspectiveFix,\n    need3dFix,\n    isWebView\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\n\nfunction Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}\n\nfunction Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: swiper.isElement || (typeof options.childList === 'undefined' ? true : options).childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.hostEl);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.hostEl, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}\n\n/* eslint-disable no-underscore-dangle */\n\nvar eventsEmitter = {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};\n\nfunction updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}\n\nfunction updateSlides() {\n  const swiper = this;\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(swiper.getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  const swiperSize = swiper.size - offsetBefore - offsetAfter;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  swiper.virtualSize = -spaceBetween - offsetBefore - offsetAfter;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slides);\n  } else if (swiper.grid) {\n    swiper.grid.unsetSlides();\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides[i];\n    if (slide) {\n      if (gridEnabled) {\n        swiper.grid.updateSlide(i, slide, slides);\n      }\n      if (elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n    }\n\n    if (isVirtual && params.slidesPerView === 'auto') {\n      if (params.virtual.slidesPerViewAutoSlideSize) {\n        slideSize = params.virtual.slidesPerViewAutoSlideSize;\n      }\n      if (slideSize && slide) {\n        if (params.roundLengths) slideSize = Math.floor(slideSize);\n        slide.style[swiper.getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    } else if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slide.style[swiper.getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slide) {\n        slide.style[swiper.getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slide) {\n      slide.swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[swiper.getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : swiper.getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const maxSnap = allSlidesSize > swiperSize ? allSlidesSize - swiperSize : 0;\n    snapGrid = snapGrid.map(snap => {\n      if (snap <= 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const offsetSize = (offsetBefore || 0) + (offsetAfter || 0);\n    if (allSlidesSize + offsetSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize - offsetSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  swiper.emit('slidesUpdated');\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}\n\nfunction updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}\n\nfunction updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}\n\nconst toggleSlideClasses$1 = (slideEl, condition, className) => {\n  if (condition && !slideEl.classList.contains(className)) {\n    slideEl.classList.add(className);\n  } else if (!condition && slideEl.classList.contains(className)) {\n    slideEl.classList.remove(className);\n  }\n};\nfunction updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  let spaceBetween = params.spaceBetween;\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isFullyVisible = slideBefore >= 0 && slideBefore <= swiper.size - swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n    }\n    toggleSlideClasses$1(slide, isVisible, params.slideVisibleClass);\n    toggleSlideClasses$1(slide, isFullyVisible, params.slideFullyVisibleClass);\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}\n\nfunction updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}\n\nconst toggleSlideClasses = (slideEl, condition, className) => {\n  if (condition && !slideEl.classList.contains(className)) {\n    slideEl.classList.add(className);\n  } else if (!condition && slideEl.classList.contains(className)) {\n    slideEl.classList.remove(className);\n  }\n};\nfunction updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  let activeSlide;\n  let prevSlide;\n  let nextSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    if (gridEnabled) {\n      activeSlide = slides.find(slideEl => slideEl.column === activeIndex);\n      nextSlide = slides.find(slideEl => slideEl.column === activeIndex + 1);\n      prevSlide = slides.find(slideEl => slideEl.column === activeIndex - 1);\n    } else {\n      activeSlide = slides[activeIndex];\n    }\n  }\n  if (activeSlide) {\n    if (!gridEnabled) {\n      // Next Slide\n      nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n      if (params.loop && !nextSlide) {\n        nextSlide = slides[0];\n      }\n\n      // Prev Slide\n      prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n      if (params.loop && !prevSlide === 0) {\n        prevSlide = slides[slides.length - 1];\n      }\n    }\n  }\n  slides.forEach(slideEl => {\n    toggleSlideClasses(slideEl, slideEl === activeSlide, params.slideActiveClass);\n    toggleSlideClasses(slideEl, slideEl === nextSlide, params.slideNextClass);\n    toggleSlideClasses(slideEl, slideEl === prevSlide, params.slidePrevClass);\n  });\n  swiper.emitSlidesClasses();\n}\n\nconst processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    let lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (!lazyEl && swiper.isElement) {\n      if (slideEl.shadowRoot) {\n        lazyEl = slideEl.shadowRoot.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n      } else {\n        // init later\n        requestAnimationFrame(() => {\n          if (slideEl.shadowRoot) {\n            lazyEl = slideEl.shadowRoot.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n            if (lazyEl) lazyEl.remove();\n          }\n        });\n      }\n    }\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nconst preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  if (swiper.params.grid && swiper.params.grid.rows > 1) {\n    const activeColumn = activeIndex;\n    const preloadColumns = [activeColumn - amount];\n    preloadColumns.push(...Array.from({\n      length: amount\n    }).map((_, i) => {\n      return activeColumn + slidesPerView + i;\n    }));\n    swiper.slides.forEach((slideEl, i) => {\n      if (preloadColumns.includes(slideEl.column)) unlazy(swiper, i);\n    });\n    return;\n  }\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind || swiper.params.loop) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex < activeIndex || realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(activeIndex - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && (i > slideIndexLastInView || i < activeIndex)) {\n        unlazy(swiper, i);\n      }\n    }\n  }\n};\n\nfunction getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nfunction updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex && !swiper.params.loop) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n  if (activeIndex === previousIndex && swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n    swiper.realIndex = getVirtualRealIndex(activeIndex);\n    return;\n  }\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (gridEnabled) {\n    const firstSlideInColumn = swiper.slides.find(slideEl => slideEl.column === activeIndex);\n    let activeSlideIndex = parseInt(firstSlideInColumn.getAttribute('data-swiper-slide-index'), 10);\n    if (Number.isNaN(activeSlideIndex)) {\n      activeSlideIndex = Math.max(swiper.slides.indexOf(firstSlideInColumn), 0);\n    }\n    realIndex = Math.floor(activeSlideIndex / params.grid.rows);\n  } else if (swiper.slides[activeIndex]) {\n    const slideIndex = swiper.slides[activeIndex].getAttribute('data-swiper-slide-index');\n    if (slideIndex) {\n      realIndex = parseInt(slideIndex, 10);\n    } else {\n      realIndex = activeIndex;\n    }\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n    swiper.emit('slideChange');\n  }\n}\n\nfunction updateClickedSlide(el, path) {\n  const swiper = this;\n  const params = swiper.params;\n  let slide = el.closest(`.${params.slideClass}, swiper-slide`);\n  if (!slide && swiper.isElement && path && path.length > 1 && path.includes(el)) {\n    [...path.slice(path.indexOf(el) + 1, path.length)].forEach(pathEl => {\n      if (!slide && pathEl.matches && pathEl.matches(`.${params.slideClass}, swiper-slide`)) {\n        slide = pathEl;\n      }\n    });\n  }\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};\n\nfunction getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}\n\nfunction setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate() {\n  return -this.snapGrid[0];\n}\n\nfunction maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}\n\nfunction translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          swiper.animating = false;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}\n\nvar translate = {\n  getTranslate: getSwiperTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};\n\nfunction setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n    swiper.wrapperEl.style.transitionDelay = duration === 0 ? `0ms` : '';\n  }\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && dir === 'reset') {\n    swiper.emit(`slideResetTransition${step}`);\n  } else if (runCallbacks && activeIndex !== previousIndex) {\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}\n\nfunction transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}\n\nfunction transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};\n\nfunction slideTo(index = 0, speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (!enabled && !internal && !initial || swiper.destroyed || swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && (rtl ? translate > swiper.translate && translate > swiper.minTranslate() : translate < swiper.translate && translate < swiper.minTranslate())) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // initial virtual\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  const isInitialVirtual = isVirtual && initial;\n  // Update Index\n  if (!isInitialVirtual && (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  const browser = getBrowser();\n  const isSafari = browser.isSafari;\n  if (isVirtual && !initial && isSafari && swiper.isElement) {\n    swiper.virtual.update(false, false, slideIndex);\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}\n\nfunction slideToLoop(index = 0, speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  if (swiper.destroyed) return;\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  const gridEnabled = swiper.grid && swiper.params.grid && swiper.params.grid.rows > 1;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      let targetSlideIndex;\n      if (gridEnabled) {\n        const slideIndex = newIndex * swiper.params.grid.rows;\n        targetSlideIndex = swiper.slides.find(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === slideIndex).column;\n      } else {\n        targetSlideIndex = swiper.getSlideIndexByData(newIndex);\n      }\n      const cols = gridEnabled ? Math.ceil(swiper.slides.length / swiper.params.grid.rows) : swiper.slides.length;\n      const {\n        centeredSlides,\n        slidesOffsetBefore,\n        slidesOffsetAfter\n      } = swiper.params;\n      const bothDirections = centeredSlides || !!slidesOffsetBefore || !!slidesOffsetAfter;\n      let slidesPerView = swiper.params.slidesPerView;\n      if (slidesPerView === 'auto') {\n        slidesPerView = swiper.slidesPerViewDynamic();\n      } else {\n        slidesPerView = Math.ceil(parseFloat(swiper.params.slidesPerView, 10));\n        if (bothDirections && slidesPerView % 2 === 0) {\n          slidesPerView = slidesPerView + 1;\n        }\n      }\n      let needLoopFix = cols - targetSlideIndex < slidesPerView;\n      if (bothDirections) {\n        needLoopFix = needLoopFix || targetSlideIndex < Math.ceil(slidesPerView / 2);\n      }\n      if (internal && bothDirections && swiper.params.slidesPerView !== 'auto' && !gridEnabled) {\n        needLoopFix = false;\n      }\n      if (needLoopFix) {\n        const direction = bothDirections ? targetSlideIndex < swiper.activeIndex ? 'prev' : 'next' : targetSlideIndex - swiper.activeIndex - 1 < swiper.params.slidesPerView ? 'next' : 'prev';\n        swiper.loopFix({\n          direction,\n          slideTo: true,\n          activeSlideIndex: direction === 'next' ? targetSlideIndex + 1 : targetSlideIndex - cols + 1,\n          slideRealIndex: direction === 'next' ? swiper.realIndex : undefined\n        });\n      }\n      if (gridEnabled) {\n        const slideIndex = newIndex * swiper.params.grid.rows;\n        newIndex = swiper.slides.find(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === slideIndex).column;\n      } else {\n        newIndex = swiper.getSlideIndexByData(newIndex);\n      }\n    }\n  }\n  requestAnimationFrame(() => {\n    swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  });\n  return swiper;\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext(speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled || swiper.destroyed) return swiper;\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n    if (swiper.activeIndex === swiper.slides.length - 1 && params.cssMode) {\n      requestAnimationFrame(() => {\n        swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n      });\n      return true;\n    }\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev(speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled || swiper.destroyed) return swiper;\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const isFreeMode = params.freeMode && params.freeMode.enabled;\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && (params.cssMode || isFreeMode)) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = isFreeMode ? snapGrid[prevSnapIndex] : snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  } else if (params.loop && swiper.activeIndex === 0 && params.cssMode) {\n    requestAnimationFrame(() => {\n      swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n    });\n    return true;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset(speed, runCallbacks = true, internal) {\n  const swiper = this;\n  if (swiper.destroyed) return;\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest(speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  if (swiper.destroyed) return;\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide() {\n  const swiper = this;\n  if (swiper.destroyed) return;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.getSlideIndexWhenGrid(swiper.clickedIndex);\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  const isGrid = swiper.grid && swiper.params.grid && swiper.params.grid.rows > 1;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      swiper.slideToLoop(realIndex);\n    } else if (slideToIndex > (isGrid ? (swiper.slides.length - slidesPerView) / 2 - (swiper.params.grid.rows - 1) : swiper.slides.length - slidesPerView)) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};\n\nfunction loopCreate(slideRealIndex, initial) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const initSlides = () => {\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    slides.forEach((el, index) => {\n      el.setAttribute('data-swiper-slide-index', index);\n    });\n  };\n  const clearBlankSlides = () => {\n    const slides = elementChildren(slidesEl, `.${params.slideBlankClass}`);\n    slides.forEach(el => {\n      el.remove();\n    });\n    if (slides.length > 0) {\n      swiper.recalcSlides();\n      swiper.updateSlides();\n    }\n  };\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n  if (params.loopAddBlankSlides && (params.slidesPerGroup > 1 || gridEnabled)) {\n    clearBlankSlides();\n  }\n  const slidesPerGroup = params.slidesPerGroup * (gridEnabled ? params.grid.rows : 1);\n  const shouldFillGroup = swiper.slides.length % slidesPerGroup !== 0;\n  const shouldFillGrid = gridEnabled && swiper.slides.length % params.grid.rows !== 0;\n  const addBlankSlides = amountOfSlides => {\n    for (let i = 0; i < amountOfSlides; i += 1) {\n      const slideEl = swiper.isElement ? createElement('swiper-slide', [params.slideBlankClass]) : createElement('div', [params.slideClass, params.slideBlankClass]);\n      swiper.slidesEl.append(slideEl);\n    }\n  };\n  if (shouldFillGroup) {\n    if (params.loopAddBlankSlides) {\n      const slidesToAdd = slidesPerGroup - swiper.slides.length % slidesPerGroup;\n      addBlankSlides(slidesToAdd);\n      swiper.recalcSlides();\n      swiper.updateSlides();\n    } else {\n      showWarning('Swiper Loop Warning: The number of slides is not even to slidesPerGroup, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)');\n    }\n    initSlides();\n  } else if (shouldFillGrid) {\n    if (params.loopAddBlankSlides) {\n      const slidesToAdd = params.grid.rows - swiper.slides.length % params.grid.rows;\n      addBlankSlides(slidesToAdd);\n      swiper.recalcSlides();\n      swiper.updateSlides();\n    } else {\n      showWarning('Swiper Loop Warning: The number of slides is not even to grid.rows, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)');\n    }\n    initSlides();\n  } else {\n    initSlides();\n  }\n  const bothDirections = params.centeredSlides || !!params.slidesOffsetBefore || !!params.slidesOffsetAfter;\n  swiper.loopFix({\n    slideRealIndex,\n    direction: bothDirections ? undefined : 'next',\n    initial\n  });\n}\n\nfunction loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  initial,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  const {\n    centeredSlides,\n    slidesOffsetBefore,\n    slidesOffsetAfter,\n    initialSlide\n  } = params;\n  const bothDirections = centeredSlides || !!slidesOffsetBefore || !!slidesOffsetAfter;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!bothDirections && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (bothDirections && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  let slidesPerView = params.slidesPerView;\n  if (slidesPerView === 'auto') {\n    slidesPerView = swiper.slidesPerViewDynamic();\n  } else {\n    slidesPerView = Math.ceil(parseFloat(params.slidesPerView, 10));\n    if (bothDirections && slidesPerView % 2 === 0) {\n      slidesPerView = slidesPerView + 1;\n    }\n  }\n  const slidesPerGroup = params.slidesPerGroupAuto ? slidesPerView : params.slidesPerGroup;\n  let loopedSlides = bothDirections ? Math.max(slidesPerGroup, Math.ceil(slidesPerView / 2)) : slidesPerGroup;\n  if (loopedSlides % slidesPerGroup !== 0) {\n    loopedSlides += slidesPerGroup - loopedSlides % slidesPerGroup;\n  }\n  loopedSlides += params.loopAdditionalSlides;\n  swiper.loopedSlides = loopedSlides;\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n  if (slides.length < slidesPerView + loopedSlides || swiper.params.effect === 'cards' && slides.length < slidesPerView + loopedSlides * 2) {\n    showWarning('Swiper Loop Warning: The number of slides is not enough for loop mode, it will be disabled or not function properly. You need to add more slides (or make duplicates) or lower the values of slidesPerView and slidesPerGroup parameters');\n  } else if (gridEnabled && params.grid.fill === 'row') {\n    showWarning('Swiper Loop Warning: Loop mode is not compatible with grid.fill = `row`');\n  }\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  const cols = gridEnabled ? Math.ceil(slides.length / params.grid.rows) : slides.length;\n  const isInitialOverflow = initial && cols - initialSlide < slidesPerView && !bothDirections;\n  let activeIndex = isInitialOverflow ? initialSlide : swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(slides.find(el => el.classList.contains(params.slideActiveClass)));\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  const activeColIndex = gridEnabled ? slides[activeSlideIndex].column : activeSlideIndex;\n  const activeColIndexWithShift = activeColIndex + (bothDirections && typeof setTranslate === 'undefined' ? -slidesPerView / 2 + 0.5 : 0);\n  // prepend last slides before start\n  if (activeColIndexWithShift < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeColIndexWithShift, slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeColIndexWithShift; i += 1) {\n      const index = i - Math.floor(i / cols) * cols;\n      if (gridEnabled) {\n        const colIndexToPrepend = cols - index - 1;\n        for (let i = slides.length - 1; i >= 0; i -= 1) {\n          if (slides[i].column === colIndexToPrepend) prependSlidesIndexes.push(i);\n        }\n        // slides.forEach((slide, slideIndex) => {\n        //   if (slide.column === colIndexToPrepend) prependSlidesIndexes.push(slideIndex);\n        // });\n      } else {\n        prependSlidesIndexes.push(cols - index - 1);\n      }\n    }\n  } else if (activeColIndexWithShift + slidesPerView > cols - loopedSlides) {\n    slidesAppended = Math.max(activeColIndexWithShift - (cols - loopedSlides * 2), slidesPerGroup);\n    if (isInitialOverflow) {\n      slidesAppended = Math.max(slidesAppended, slidesPerView - cols + initialSlide + 1);\n    }\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / cols) * cols;\n      if (gridEnabled) {\n        slides.forEach((slide, slideIndex) => {\n          if (slide.column === index) appendSlidesIndexes.push(slideIndex);\n        });\n      } else {\n        appendSlidesIndexes.push(index);\n      }\n    }\n  }\n  swiper.__preventObserver__ = true;\n  requestAnimationFrame(() => {\n    swiper.__preventObserver__ = false;\n  });\n  if (swiper.params.effect === 'cards' && slides.length < slidesPerView + loopedSlides * 2) {\n    if (appendSlidesIndexes.includes(activeSlideIndex)) {\n      appendSlidesIndexes.splice(appendSlidesIndexes.indexOf(activeSlideIndex), 1);\n    }\n    if (prependSlidesIndexes.includes(activeSlideIndex)) {\n      prependSlidesIndexes.splice(prependSlidesIndexes.indexOf(activeSlideIndex), 1);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      slides[index].swiperLoopMoveDOM = true;\n      slidesEl.prepend(slides[index]);\n      slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      slides[index].swiperLoopMoveDOM = true;\n      slidesEl.append(slides[index]);\n      slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  } else if (gridEnabled && (prependSlidesIndexes.length > 0 && isPrev || appendSlidesIndexes.length > 0 && isNext)) {\n    swiper.slides.forEach((slide, slideIndex) => {\n      swiper.grid.updateSlide(slideIndex, slide, swiper.slides);\n    });\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + Math.ceil(slidesPrepended), 0, false, true);\n          if (setTranslate) {\n            swiper.touchEventsData.startTranslate = swiper.touchEventsData.startTranslate - diff;\n            swiper.touchEventsData.currentTranslate = swiper.touchEventsData.currentTranslate - diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          const shift = gridEnabled ? prependSlidesIndexes.length / params.grid.rows : prependSlidesIndexes.length;\n          swiper.slideTo(swiper.activeIndex + shift, 0, false, true);\n          swiper.touchEventsData.currentTranslate = swiper.translate;\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touchEventsData.startTranslate = swiper.touchEventsData.startTranslate - diff;\n            swiper.touchEventsData.currentTranslate = swiper.touchEventsData.currentTranslate - diff;\n          }\n        }\n      } else {\n        const shift = gridEnabled ? appendSlidesIndexes.length / params.grid.rows : appendSlidesIndexes.length;\n        swiper.slideTo(swiper.activeIndex - shift, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix({\n          ...loopParams,\n          slideTo: c.params.slidesPerView === params.slidesPerView ? slideTo : false\n        });\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix({\n        ...loopParams,\n        slideTo: swiper.controller.control.params.slidesPerView === params.slidesPerView ? slideTo : false\n      });\n    }\n  }\n  swiper.emit('loopFix');\n}\n\nfunction loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || !slidesEl || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};\n\nfunction setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}\n\nfunction unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor\n};\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nfunction preventEdgeSwipe(swiper, event, startX) {\n  const window = getWindow();\n  const {\n    params\n  } = swiper;\n  const edgeSwipeDetection = params.edgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n      return true;\n    }\n    return false;\n  }\n  return true;\n}\nfunction onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  const data = swiper.touchEventsData;\n  if (e.type === 'pointerdown') {\n    if (data.pointerId !== null && data.pointerId !== e.pointerId) {\n      return;\n    }\n    data.pointerId = e.pointerId;\n  } else if (e.type === 'touchstart' && e.targetTouches.length === 1) {\n    data.touchId = e.targetTouches[0].identifier;\n  }\n  if (e.type === 'touchstart') {\n    // don't proceed touch event\n    preventEdgeSwipe(swiper, e, e.targetTouches[0].pageX);\n    return;\n  }\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && e.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!elementIsChildOf(targetEl, swiper.wrapperEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = e.composedPath ? e.composedPath() : e.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  if (!preventEdgeSwipe(swiper, e, startX)) {\n    return;\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl && (e.pointerType === 'mouse' || e.pointerType !== 'mouse' && !targetEl.matches(data.focusableElements))) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (e.type === 'pointermove') {\n    if (data.touchId !== null) return; // return from pointer if we use touch\n    const id = e.pointerId;\n    if (id !== data.pointerId) return;\n  }\n  let targetTouch;\n  if (e.type === 'touchmove') {\n    targetTouch = [...e.changedTouches].find(t => t.identifier === data.touchId);\n    if (!targetTouch || targetTouch.identifier !== data.touchId) return;\n  } else {\n    targetTouch = e;\n  }\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (rtl && (pageX > touches.startX && -swiper.translate <= swiper.maxTranslate() || pageX < touches.startX && -swiper.translate >= swiper.minTranslate())) {\n      return;\n    } else if (!rtl && (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate())) {\n      return;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== e.target && e.pointerType !== 'mouse') {\n    document.activeElement.blur();\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  touches.previousX = touches.currentX;\n  touches.previousY = touches.currentY;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || e.type === 'touchmove' && data.preventTouchMoveFromPointerMove) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  const allowLoopFix = swiper.touchesDirection === 'next' && swiper.allowSlideNext || swiper.touchesDirection === 'prev' && swiper.allowSlidePrev;\n  if (!data.isMoved) {\n    if (isLoop && allowLoopFix) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true,\n        detail: {\n          bySwiperTouchMove: true\n        }\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  new Date().getTime();\n  if (params._loopSwapReset !== false && data.isMoved && data.allowThresholdMove && prevTouchesDirection !== swiper.touchesDirection && isLoop && allowLoopFix && Math.abs(diff) >= 1) {\n    Object.assign(touches, {\n      startX: pageX,\n      startY: pageY,\n      currentX: pageX,\n      currentY: pageY,\n      startTranslate: data.currentTranslate\n    });\n    data.loopSwapReset = true;\n    data.startTranslate = data.currentTranslate;\n    return;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && allowLoopFix && !loopFixed && data.allowThresholdMove && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.slidesSizesGrid[swiper.activeIndex + 1] - (params.slidesPerView !== 'auto' && swiper.slides.length - params.slidesPerView >= 2 ? swiper.slidesSizesGrid[swiper.activeIndex + 1] + swiper.params.spaceBetween : 0) - swiper.params.spaceBetween : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && allowLoopFix && !loopFixed && data.allowThresholdMove && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.slidesSizesGrid[swiper.slidesSizesGrid.length - 1] + swiper.params.spaceBetween + (params.slidesPerView !== 'auto' && swiper.slides.length - params.slidesPerView >= 2 ? swiper.slidesSizesGrid[swiper.slidesSizesGrid.length - 1] + swiper.params.spaceBetween : 0) : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetTouch;\n  const isTouchEvent = e.type === 'touchend' || e.type === 'touchcancel';\n  if (!isTouchEvent) {\n    if (data.touchId !== null) return; // return from pointer if we use touch\n    if (e.pointerId !== data.pointerId) return;\n    targetTouch = e;\n  } else {\n    targetTouch = [...e.changedTouches].find(t => t.identifier === data.touchId);\n    if (!targetTouch || targetTouch.identifier !== data.touchId) return;\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave', 'contextmenu'].includes(e.type)) {\n    const proceed = ['pointercancel', 'contextmenu'].includes(e.type) && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  data.pointerId = null;\n  data.touchId = null;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && e.pointerType === 'mouse') return;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target, pathTree);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 && !data.loopSwapReset || data.currentTranslate === data.startTranslate && !data.loopSwapReset) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  const swipeToLast = currentPos >= -swiper.maxTranslate() && !swiper.params.loop;\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (swipeToLast || currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (swipeToLast || currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = params.virtual && params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}\n\nfunction onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  if (swiper.params.cssMode || swiper.params.slidesPerView !== 'auto' && !swiper.params.autoHeight) {\n    return;\n  }\n  swiper.update();\n}\n\nfunction onDocumentTouchStart() {\n  const swiper = this;\n  if (swiper.documentTouchHandlerProceeded) return;\n  swiper.documentTouchHandlerProceeded = true;\n  if (swiper.params.touchReleaseOnEdges) {\n    swiper.el.style.touchAction = 'auto';\n  }\n}\n\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n  if (!el || typeof el === 'string') return;\n\n  // Touch Events\n  document[domMethod]('touchstart', swiper.onDocumentTouchStart, {\n    passive: false,\n    capture\n  });\n  el[domMethod]('touchstart', swiper.onTouchStart, {\n    passive: false\n  });\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('touchmove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('touchend', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('touchcancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('contextmenu', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  swiper.onDocumentTouchStart = onDocumentTouchStart.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nvar events$1 = {\n  attachEvents,\n  detachEvents\n};\n\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nfunction setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n  const document = getDocument();\n\n  // Get breakpoint for window/container width and update parameters\n  const breakpointsBase = params.breakpointsBase === 'window' || !params.breakpointsBase ? params.breakpointsBase : 'container';\n  const breakpointContainer = ['window', 'container'].includes(params.breakpointsBase) || !params.breakpointsBase ? swiper.el : document.querySelector(params.breakpointsBase);\n  const breakpoint = swiper.getBreakpoint(breakpoints, breakpointsBase, breakpointContainer);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasGrabCursor = swiper.params.grabCursor;\n  const isGrabCursor = breakpointParams.grabCursor;\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n  if (wasGrabCursor && !isGrabCursor) {\n    swiper.unsetGrabCursor();\n  } else if (!wasGrabCursor && isGrabCursor) {\n    swiper.setGrabCursor();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    if (typeof breakpointParams[prop] === 'undefined') return;\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  const wasLoop = params.loop;\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  const hasLoop = swiper.params.loop;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (initialized) {\n    if (needsReLoop) {\n      swiper.loopDestroy();\n      swiper.loopCreate(realIndex);\n      swiper.updateSlides();\n    } else if (!wasLoop && hasLoop) {\n      swiper.loopCreate(realIndex);\n      swiper.updateSlides();\n    } else if (wasLoop && !hasLoop) {\n      swiper.loopDestroy();\n    }\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}\n\nfunction getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = {\n  setBreakpoint,\n  getBreakpoint\n};\n\nfunction prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nfunction addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}\n\nfunction removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  if (!el || typeof el === 'string') return;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}\n\nvar classes = {\n  addClasses,\n  removeClasses\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nvar checkOverflow$1 = {\n  checkOverflow\n};\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  swiperElementNodeName: 'SWIPER-CONTAINER',\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  eventsPrefix: 'swiper',\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopAddBlankSlides: true,\n  loopAdditionalSlides: 0,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideFullyVisibleClass: 'swiper-slide-fully-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};\n\nfunction moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (moduleParamName === 'navigation' && params[moduleParamName] && params[moduleParamName].enabled && !params[moduleParamName].prevEl && !params[moduleParamName].nextEl) {\n      params[moduleParamName].auto = true;\n    }\n    if (['pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] && params[moduleParamName].enabled && !params[moduleParamName].el) {\n      params[moduleParamName].auto = true;\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}\n\n/* eslint no-param-reassign: \"off\" */\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events: events$1,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        pointerId: null,\n        touchId: null\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getDirectionLabel(property) {\n    if (this.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.find(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index));\n  }\n  getSlideIndexWhenGrid(index) {\n    if (this.grid && this.params.grid && this.params.grid.rows > 1) {\n      if (this.params.grid.fill === 'column') {\n        index = Math.floor(index / this.params.grid.rows);\n      } else if (this.params.grid.fill === 'row') {\n        index = index % Math.ceil(this.slides.length / this.params.grid.rows);\n      }\n    }\n    return index;\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (typeof params.slidesPerView === 'number') return params.slidesPerView;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex] ? Math.ceil(slides[activeIndex].swiperSlideSize) : 0;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += Math.ceil(slides[i].swiperSlideSize);\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (params.freeMode && params.freeMode.enabled && !params.cssMode) {\n      setTranslate();\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !params.centeredSlides) {\n        const slides = swiper.virtual && params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.parentNode && el.parentNode.host && el.parentNode.host.nodeName === swiper.params.swiperElementNodeName.toUpperCase()) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement && !el.parentNode.host.slideSlots ? el.parentNode.host : wrapperEl,\n      hostEl: swiper.isElement ? el.parentNode.host : el,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate(undefined, true);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    const lazyElements = [...swiper.el.querySelectorAll('[loading=\"lazy\"]')];\n    if (swiper.isElement) {\n      lazyElements.push(...swiper.hostEl.querySelectorAll('[loading=\"lazy\"]'));\n    }\n    lazyElements.forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      if (el && typeof el !== 'string') {\n        el.removeAttribute('style');\n      }\n      if (wrapperEl) {\n        wrapperEl.removeAttribute('style');\n      }\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideFullyVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      if (swiper.el && typeof swiper.el !== 'string') {\n        swiper.el.swiper = null;\n      }\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\n\nexport { Swiper as S, defaults as d };\n", "/**\n * Swiper Controller Utility\n *\n * This utility initializes and controls a Swiper instance for the landing page.\n * It listens for Typebot form completion and automatically transitions to the\n * second slide with a minimal, smooth vertical effect.\n *\n * Features:\n * - Initializes Swiper with vertical direction\n * - Displays only one slide at a time\n * - Listens for Typebot completion event\n * - Automatically transitions to slide 2 when form is completed\n * - No user control (swipe disabled)\n * - Minimal transition effect\n */\n\nimport 'swiper/css';\n\nimport Swiper from 'swiper';\n\ninterface TypebotMessage {\n  type: string;\n  data?: {\n    [key: string]: unknown;\n  };\n}\n\n/**\n * Configuration for the Swiper controller\n */\ninterface SwiperControllerConfig {\n  /** Selector for the Swiper container element */\n  containerSelector?: string;\n  /** Direction of the slider */\n  direction?: 'horizontal' | 'vertical';\n  /** Number of slides to show at once */\n  slidesPerView?: number;\n  /** Allow touch/mouse dragging */\n  allowTouchMove?: boolean;\n  /** Transition speed in milliseconds */\n  speed?: number;\n  /** Delay before auto-transitioning after form completion (ms) */\n  transitionDelay?: number;\n  /** Enable debug logging */\n  debug?: boolean;\n}\n\n/**\n * Default configuration\n */\nconst DEFAULT_CONFIG: Required<SwiperControllerConfig> = {\n  containerSelector: '.swiper.is-landingpage',\n  direction: 'vertical',\n  slidesPerView: 1,\n  allowTouchMove: false,\n  speed: 600,\n  transitionDelay: 500,\n  debug: false,\n};\n\n/**\n * SwiperController class\n * Handles Swiper initialization and Typebot form completion integration\n */\nexport class SwiperController {\n  private config: Required<SwiperControllerConfig>;\n  private swiper: Swiper | null = null;\n  private isListening = false;\n  private hasTransitioned = false;\n\n  constructor(config: SwiperControllerConfig = {}) {\n    this.config = { ...DEFAULT_CONFIG, ...config };\n  }\n\n  /**\n   * Initialize the Swiper controller\n   */\n  public init(): void {\n    if (this.swiper) {\n      this.log('Swiper already initialized');\n      return;\n    }\n\n    this.initSwiper();\n    this.setupMessageListener();\n    this.isListening = true;\n    this.log('SwiperController initialized and listening for Typebot events');\n  }\n\n  /**\n   * Initialize the Swiper instance\n   */\n  private initSwiper(): void {\n    const container = document.querySelector(this.config.containerSelector);\n\n    if (!container) {\n      console.error(\n        `[SwiperController] Container not found with selector: ${this.config.containerSelector}`\n      );\n      return;\n    }\n\n    this.log('Initializing Swiper with config:', {\n      direction: this.config.direction,\n      slidesPerView: this.config.slidesPerView,\n      allowTouchMove: this.config.allowTouchMove,\n      speed: this.config.speed,\n    });\n\n    this.swiper = new Swiper(this.config.containerSelector, {\n      direction: this.config.direction,\n      slidesPerView: this.config.slidesPerView,\n      allowTouchMove: this.config.allowTouchMove,\n      speed: this.config.speed,\n      effect: 'slide',\n      on: {\n        init: () => {\n          this.log('Swiper initialized successfully');\n        },\n        slideChange: () => {\n          this.log(`Slide changed to index: ${this.swiper?.activeIndex}`);\n        },\n      },\n    });\n  }\n\n  /**\n   * Set up the message listener for Typebot events\n   */\n  private setupMessageListener(): void {\n    window.addEventListener('message', this.handleMessage.bind(this));\n  }\n\n  /**\n   * Handle incoming postMessage events from Typebot\n   */\n  private handleMessage(event: MessageEvent): void {\n    try {\n      const { data } = event;\n\n      // Check for Typebot completion event\n      if (this.isTypebotCompletion(data)) {\n        this.handleTypebotCompletion();\n      }\n    } catch (error) {\n      console.error('[SwiperController] Error handling Typebot message:', error);\n    }\n  }\n\n  /**\n   * Check if the message is a Typebot completion event\n   */\n  private isTypebotCompletion(data: unknown): boolean {\n    return (\n      typeof data === 'object' &&\n      data !== null &&\n      'type' in data &&\n      (data as TypebotMessage).type === 'typebot-completion'\n    );\n  }\n\n  /**\n   * Handle Typebot completion event\n   */\n  private handleTypebotCompletion(): void {\n    // Only transition once\n    if (this.hasTransitioned) {\n      this.log('Already transitioned to slide 2, skipping');\n      return;\n    }\n\n    this.log('Typebot form completed, transitioning to slide 2');\n\n    // Add a small delay for a smoother experience\n    setTimeout(() => {\n      this.transitionToSlide(1); // Index 1 = second slide\n    }, this.config.transitionDelay);\n  }\n\n  /**\n   * Transition to a specific slide\n   */\n  private transitionToSlide(index: number): void {\n    if (!this.swiper) {\n      this.log('Swiper not initialized, cannot transition');\n      return;\n    }\n\n    this.log(`Transitioning to slide ${index + 1}`);\n    this.swiper.slideTo(index);\n    this.hasTransitioned = true;\n  }\n\n  /**\n   * Manually transition to the next slide (useful for testing)\n   */\n  public next(): void {\n    if (!this.swiper) {\n      this.log('Swiper not initialized');\n      return;\n    }\n\n    this.swiper.slideNext();\n  }\n\n  /**\n   * Manually transition to the previous slide (useful for testing)\n   */\n  public prev(): void {\n    if (!this.swiper) {\n      this.log('Swiper not initialized');\n      return;\n    }\n\n    this.swiper.slidePrev();\n  }\n\n  /**\n   * Manually transition to slide 2 (useful for testing)\n   */\n  public goToSlide2(): void {\n    this.hasTransitioned = false; // Reset flag\n    this.transitionToSlide(1);\n  }\n\n  /**\n   * Get the current active slide index\n   */\n  public getActiveIndex(): number | null {\n    return this.swiper?.activeIndex ?? null;\n  }\n\n  /**\n   * Reset the controller state\n   */\n  public reset(): void {\n    this.hasTransitioned = false;\n    if (this.swiper) {\n      this.swiper.slideTo(0);\n    }\n    this.log('SwiperController reset to initial state');\n  }\n\n  /**\n   * Log messages if debug mode is enabled\n   */\n  private log(...args: unknown[]): void {\n    if (this.config.debug) {\n      console.log('[SwiperController]', ...args);\n    }\n  }\n\n  /**\n   * Destroy the Swiper instance and remove event listeners\n   */\n  public destroy(): void {\n    if (this.swiper) {\n      this.swiper.destroy();\n      this.swiper = null;\n    }\n\n    window.removeEventListener('message', this.handleMessage.bind(this));\n    this.isListening = false;\n    this.log('SwiperController destroyed');\n  }\n}\n\n/**\n * Initialize the Swiper controller with default configuration\n */\nexport function initSwiperController(config: SwiperControllerConfig = {}): SwiperController {\n  const controller = new SwiperController({\n    ...config,\n    debug: true, // Enable debug logging by default\n  });\n\n  controller.init();\n\n  return controller;\n}\n", "/**\n * Typebot Email Handler Utility\n *\n * This utility listens for Typebot email variable changes and triggers\n * the profile card rotation animation when the email is completed.\n *\n * Features:\n * - Listens for Typebot postMessage events for email variable\n * - Captures the \"email\" and \"telefone\" variables from Typebot\n * - Triggers card rotation animation when email is completed\n * - Updates email and phone elements in real-time\n * - Manages the active state transitions between front and rotation elements\n */\n\ninterface TypebotVariableUpdate {\n  type: string;\n  variable?: string;\n  value?: string;\n  variableId?: string;\n}\n\n/**\n * Configuration for the email handler\n */\ninterface EmailHandlerConfig {\n  /** Selector for the profile card wrapper element */\n  profileCardSelector?: string;\n  /** Selector for the front elements container */\n  frontElementsSelector?: string;\n  /** Selector for the rotation elements container */\n  rotationElementsSelector?: string;\n  /** Selector for the email display element */\n  emailSelector?: string;\n  /** Selector for the phone display element */\n  phoneSelector?: string;\n  /** Class to add to profile card when email is filled */\n  activeFillClass?: string;\n  /** Class to add to profile card to trigger rotation */\n  rotateClass?: string;\n  /** Class to toggle on front/rotation elements */\n  activeClass?: string;\n  /** Enable debug logging */\n  debug?: boolean;\n}\n\n/**\n * Default configuration\n */\nconst DEFAULT_CONFIG: Required<EmailHandlerConfig> = {\n  profileCardSelector: '.profile-card_wrapper',\n  frontElementsSelector: '.front-elements',\n  rotationElementsSelector: '.rotation-elements',\n  emailSelector: '[card-info=\"email\"]',\n  phoneSelector: '[card-info=\"telefone\"]',\n  activeFillClass: 'active_fill',\n  rotateClass: 'rotate',\n  activeClass: 'active',\n  debug: false,\n};\n\n/**\n * TypebotEmailHandler class\n * Handles listening for Typebot email events and triggering card rotation\n */\nexport class TypebotEmailHandler {\n  private config: Required<EmailHandlerConfig>;\n  private userEmail: string | null = null;\n  private userPhone: string | null = null;\n  private isListening = false;\n  private hasRotated = false;\n\n  constructor(config: EmailHandlerConfig = {}) {\n    this.config = { ...DEFAULT_CONFIG, ...config };\n  }\n\n  /**\n   * Initialize the email handler and start listening for Typebot events\n   */\n  public init(): void {\n    if (this.isListening) {\n      this.log('Already listening for Typebot events');\n      return;\n    }\n\n    this.setupMessageListener();\n    this.isListening = true;\n    this.log('TypebotEmailHandler initialized and listening for events');\n  }\n\n  /**\n   * Set up the message listener for Typebot events\n   */\n  private setupMessageListener(): void {\n    window.addEventListener('message', this.handleMessage.bind(this));\n  }\n\n  /**\n   * Handle incoming postMessage events from Typebot\n   */\n  private handleMessage(event: MessageEvent): void {\n    try {\n      const { data } = event;\n\n      // Check for Typebot variable update event\n      if (this.isTypebotVariableUpdate(data)) {\n        this.handleTypebotVariableUpdate(data as TypebotVariableUpdate);\n      }\n    } catch (error) {\n      console.error('Error handling Typebot message:', error);\n    }\n  }\n\n  /**\n   * Check if the message is a Typebot variable update event\n   */\n  private isTypebotVariableUpdate(data: unknown): boolean {\n    return (\n      typeof data === 'object' &&\n      data !== null &&\n      'type' in data &&\n      (data as TypebotVariableUpdate).type === 'typebot-variable-update' &&\n      'variable' in data\n    );\n  }\n\n  /**\n   * Handle Typebot variable update event\n   */\n  private handleTypebotVariableUpdate(message: TypebotVariableUpdate): void {\n    const { variable, value } = message;\n\n    if (!variable || !value) {\n      return;\n    }\n\n    this.log(`Typebot variable \"${variable}\" updated:`, value);\n\n    // Handle email variable\n    if (variable === 'email') {\n      this.updateUserEmail(value);\n      this.triggerCardRotation();\n    }\n\n    // Handle phone variable\n    if (variable === 'telefone' || variable === 'phone') {\n      this.updateUserPhone(value);\n    }\n  }\n\n  /**\n   * Update the stored user email and display it on the page\n   */\n  private updateUserEmail(email: string): void {\n    // Sanitize the email\n    const sanitizedEmail = this.sanitizeInput(email);\n\n    if (!sanitizedEmail) {\n      this.log('Invalid or empty email, skipping update');\n      return;\n    }\n\n    this.userEmail = sanitizedEmail;\n    this.log('User email updated to:', this.userEmail);\n\n    // Update email display on the page\n    this.updateEmailDisplay();\n  }\n\n  /**\n   * Update the stored user phone and display it on the page\n   */\n  private updateUserPhone(phone: string): void {\n    // Sanitize the phone\n    const sanitizedPhone = this.sanitizeInput(phone);\n\n    if (!sanitizedPhone) {\n      this.log('Invalid or empty phone, skipping update');\n      return;\n    }\n\n    this.userPhone = sanitizedPhone;\n    this.log('User phone updated to:', this.userPhone);\n\n    // Update phone display on the page\n    this.updatePhoneDisplay();\n  }\n\n  /**\n   * Sanitize user input (remove HTML tags, trim, limit length)\n   */\n  private sanitizeInput(input: string): string {\n    return input\n      .replace(/[<>]/g, '') // Remove HTML tags\n      .trim()\n      .substring(0, 200); // Limit to 200 characters\n  }\n\n  /**\n   * Update the email display element on the page\n   */\n  private updateEmailDisplay(): void {\n    if (!this.userEmail) {\n      this.log('No user email available, skipping display update');\n      return;\n    }\n\n    const emailElements = document.querySelectorAll(this.config.emailSelector);\n\n    if (emailElements.length === 0) {\n      this.log('No email elements found with selector:', this.config.emailSelector);\n      return;\n    }\n\n    this.log(`Found ${emailElements.length} email element(s) to update`);\n\n    emailElements.forEach((element) => {\n      element.textContent = this.userEmail!;\n      this.log(`Updated email element to: \"${this.userEmail}\"`);\n    });\n  }\n\n  /**\n   * Update the phone display element on the page\n   */\n  private updatePhoneDisplay(): void {\n    if (!this.userPhone) {\n      this.log('No user phone available, skipping display update');\n      return;\n    }\n\n    const phoneElements = document.querySelectorAll(this.config.phoneSelector);\n\n    if (phoneElements.length === 0) {\n      this.log('No phone elements found with selector:', this.config.phoneSelector);\n      return;\n    }\n\n    this.log(`Found ${phoneElements.length} phone element(s) to update`);\n\n    phoneElements.forEach((element) => {\n      element.textContent = this.userPhone!;\n      this.log(`Updated phone element to: \"${this.userPhone}\"`);\n    });\n  }\n\n  /**\n   * Trigger the card rotation animation\n   * This adds the rotate class and toggles active states\n   */\n  private triggerCardRotation(): void {\n    // Only rotate once\n    if (this.hasRotated) {\n      this.log('Card has already been rotated, skipping');\n      return;\n    }\n\n    this.log('Triggering card rotation animation');\n\n    // Find the profile card element\n    const profileCard = document.querySelector(this.config.profileCardSelector);\n\n    if (!profileCard) {\n      this.log('Profile card not found with selector:', this.config.profileCardSelector);\n      return;\n    }\n\n    // Add active_fill and rotate classes to profile card\n    profileCard.classList.add(this.config.activeFillClass);\n    profileCard.classList.add(this.config.rotateClass);\n    this.log(\n      `Added classes to profile card: ${this.config.activeFillClass}, ${this.config.rotateClass}`\n    );\n\n    // Find front and rotation elements\n    const frontElements = document.querySelector(this.config.frontElementsSelector);\n    const rotationElements = document.querySelector(this.config.rotationElementsSelector);\n\n    if (!frontElements) {\n      this.log('Front elements not found with selector:', this.config.frontElementsSelector);\n    } else {\n      // Remove active class from front elements\n      frontElements.classList.remove(this.config.activeClass);\n      this.log(`Removed ${this.config.activeClass} class from front elements`);\n    }\n\n    if (!rotationElements) {\n      this.log('Rotation elements not found with selector:', this.config.rotationElementsSelector);\n    } else {\n      // Add active class to rotation elements\n      rotationElements.classList.add(this.config.activeClass);\n      this.log(`Added ${this.config.activeClass} class to rotation elements`);\n    }\n\n    // Mark as rotated\n    this.hasRotated = true;\n    this.log('Card rotation completed');\n  }\n\n  /**\n   * Manually trigger the card rotation (useful for testing)\n   */\n  public rotate(): void {\n    this.hasRotated = false; // Reset the flag\n    this.triggerCardRotation();\n  }\n\n  /**\n   * Get the current user email\n   */\n  public getUserEmail(): string | null {\n    return this.userEmail;\n  }\n\n  /**\n   * Get the current user phone\n   */\n  public getUserPhone(): string | null {\n    return this.userPhone;\n  }\n\n  /**\n   * Reset the handler state\n   */\n  public reset(): void {\n    this.userEmail = null;\n    this.userPhone = null;\n    this.hasRotated = false;\n    this.log('Email handler reset');\n  }\n\n  /**\n   * Log messages if debug mode is enabled\n   */\n  private log(...args: unknown[]): void {\n    if (this.config.debug) {\n      console.log('[TypebotEmailHandler]', ...args);\n    }\n  }\n\n  /**\n   * Destroy the email handler and remove event listeners\n   */\n  public destroy(): void {\n    window.removeEventListener('message', this.handleMessage.bind(this));\n    this.isListening = false;\n    this.log('TypebotEmailHandler destroyed');\n  }\n}\n\n/**\n * Initialize the Typebot email handler with default configuration\n */\nexport function initTypebotEmailHandler(config: EmailHandlerConfig = {}): TypebotEmailHandler {\n  const handler = new TypebotEmailHandler({\n    ...config,\n    debug: true, // Enable debug logging by default\n  });\n\n  handler.init();\n\n  return handler;\n}\n", "/**\n * Typebot Name Replacer Utility\n *\n * This utility listens for Typebot variable changes and dynamically replaces\n * asterisks (***) on the page with the user's entered name.\n *\n * Features:\n * - Listens for Typebot postMessage events\n * - Captures the \"nome\" variable from Typebot\n * - Replaces all asterisks with the user's name\n * - Updates profile card elements in real-time\n * - Handles multiple asterisk patterns (*, **, ***, etc.)\n */\n\ninterface TypebotMessage {\n  type: string;\n  data?: {\n    nome?: string;\n    userId?: string;\n    [key: string]: unknown;\n  };\n}\n\ninterface TypebotVariableUpdate {\n  type: string;\n  variable?: string;\n  value?: string;\n  variableId?: string;\n}\n\n/**\n * Configuration for the name replacer\n */\ninterface NameReplacerConfig {\n  /** Selector for elements containing asterisks to replace with name */\n  targetSelector?: string;\n  /** Selector for elements containing asterisks to replace with user ID */\n  userIdSelector?: string;\n  /** Selector for the profile card wrapper element */\n  profileCardSelector?: string;\n  /** Class to add to profile card when name is filled */\n  activeClass?: string;\n  /** Attribute to identify card info elements */\n  cardInfoAttribute?: string;\n  /** Value of the card info attribute for name elements */\n  nameAttributeValue?: string;\n  /** Value of the card info attribute for user ID elements */\n  userIdAttributeValue?: string;\n  /** Pattern to match asterisks (default: /\\*+/g) */\n  asteriskPattern?: RegExp;\n  /** Additional elements to activate (relative to profile card) */\n  additionalActiveElements?: string[];\n  /** Enable debug logging */\n  debug?: boolean;\n}\n\n/**\n * Default configuration\n */\nconst DEFAULT_CONFIG: Required<NameReplacerConfig> = {\n  targetSelector: '[card-info=\"name\"]',\n  userIdSelector: '[card-info=\"random-code\"]',\n  profileCardSelector: '.profile-card_wrapper',\n  activeClass: 'active_fill',\n  cardInfoAttribute: 'card-info',\n  nameAttributeValue: 'name',\n  userIdAttributeValue: 'random-code',\n  asteriskPattern: /\\*+/g,\n  additionalActiveElements: ['.shadow-yellow', '.visual-block-card'],\n  debug: false,\n};\n\n/**\n * TypebotNameReplacer class\n * Handles listening for Typebot events and replacing asterisks with user names\n */\nexport class TypebotNameReplacer {\n  private config: Required<NameReplacerConfig>;\n  private userName: string | null = null;\n  private userId: string | null = null;\n  private isListening = false;\n\n  constructor(config: NameReplacerConfig = {}) {\n    this.config = { ...DEFAULT_CONFIG, ...config };\n  }\n\n  /**\n   * Initialize the name replacer and start listening for Typebot events\n   */\n  public init(): void {\n    if (this.isListening) {\n      this.log('Already listening for Typebot events');\n      return;\n    }\n\n    this.setupMessageListener();\n    this.isListening = true;\n    this.log('TypebotNameReplacer initialized and listening for events');\n  }\n\n  /**\n   * Set up the message listener for Typebot events\n   */\n  private setupMessageListener(): void {\n    window.addEventListener('message', this.handleMessage.bind(this));\n  }\n\n  /**\n   * Handle incoming postMessage events from Typebot\n   */\n  private handleMessage(event: MessageEvent): void {\n    try {\n      const { data } = event;\n\n      // Check for Typebot completion event\n      if (this.isTypebotCompletion(data)) {\n        this.handleTypebotCompletion(data as TypebotMessage);\n      }\n\n      // Check for Typebot variable update event\n      if (this.isTypebotVariableUpdate(data)) {\n        this.handleTypebotVariableUpdate(data as TypebotVariableUpdate);\n      }\n    } catch (error) {\n      console.error('Error handling Typebot message:', error);\n    }\n  }\n\n  /**\n   * Check if the message is a Typebot completion event\n   */\n  private isTypebotCompletion(data: unknown): boolean {\n    return (\n      typeof data === 'object' &&\n      data !== null &&\n      'type' in data &&\n      (data as TypebotMessage).type === 'typebot-completion'\n    );\n  }\n\n  /**\n   * Check if the message is a Typebot variable update event\n   */\n  private isTypebotVariableUpdate(data: unknown): boolean {\n    return (\n      typeof data === 'object' &&\n      data !== null &&\n      'type' in data &&\n      (data as TypebotVariableUpdate).type === 'typebot-variable-update' &&\n      'variable' in data &&\n      (data as TypebotVariableUpdate).variable === 'nome'\n    );\n  }\n\n  /**\n   * Handle Typebot completion event\n   */\n  private handleTypebotCompletion(message: TypebotMessage): void {\n    if (message.data && message.data.nome) {\n      const { nome } = message.data;\n      this.log('Typebot completed with nome:', nome);\n      this.updateUserName(nome);\n    }\n\n    // Also capture user ID if provided\n    if (message.data && message.data.userId) {\n      const { userId } = message.data;\n      this.log('Typebot completed with userId:', userId);\n      this.updateUserId(userId);\n    }\n  }\n\n  /**\n   * Handle Typebot variable update event\n   */\n  private handleTypebotVariableUpdate(message: TypebotVariableUpdate): void {\n    if (message.value) {\n      this.log('Typebot variable \"nome\" updated:', message.value);\n      this.updateUserName(message.value);\n    }\n\n    // Also capture the variable ID if provided\n    if (message.variableId) {\n      this.log('Typebot variable ID captured:', message.variableId);\n      this.updateUserId(message.variableId);\n    }\n  }\n\n  /**\n   * Update the stored user name and replace asterisks on the page\n   */\n  private updateUserName(name: string): void {\n    // Sanitize the name\n    const sanitizedName = this.sanitizeName(name);\n\n    if (!sanitizedName) {\n      this.log('Invalid or empty name, skipping update');\n      return;\n    }\n\n    this.userName = sanitizedName;\n    this.log('User name updated to:', this.userName);\n\n    // Replace asterisks on the page\n    this.replaceAsterisks();\n\n    // Activate the profile card\n    this.activateProfileCard();\n  }\n\n  /**\n   * Sanitize the user name (remove HTML tags, trim, limit length)\n   */\n  private sanitizeName(name: string): string {\n    return name\n      .replace(/[<>]/g, '') // Remove HTML tags\n      .trim()\n      .substring(0, 100); // Limit to 100 characters\n  }\n\n  /**\n   * Replace all asterisks on the page with the user's name\n   */\n  private replaceAsterisks(): void {\n    if (!this.userName) {\n      this.log('No user name available, skipping replacement');\n      return;\n    }\n\n    // Find all elements with the target selector\n    const elements = document.querySelectorAll(this.config.targetSelector);\n\n    if (elements.length === 0) {\n      this.log('No elements found with selector:', this.config.targetSelector);\n      return;\n    }\n\n    this.log(`Found ${elements.length} element(s) to update`);\n\n    elements.forEach((element) => {\n      const currentText = element.textContent || '';\n\n      // Check if the element contains asterisks\n      if (this.config.asteriskPattern.test(currentText)) {\n        // Replace asterisks with the user's name\n        const newText = currentText.replace(this.config.asteriskPattern, this.userName!);\n        element.textContent = newText;\n\n        this.log(`Updated element: \"${currentText}\" -> \"${newText}\"`);\n\n        // Add a class to indicate the element has been updated\n        element.classList.add('name-updated');\n      }\n    });\n  }\n\n  /**\n   * Update the stored user ID and replace asterisks on the page\n   */\n  private updateUserId(id: string): void {\n    // Sanitize the ID\n    const sanitizedId = this.sanitizeName(id);\n\n    if (!sanitizedId) {\n      this.log('Invalid or empty user ID, skipping update');\n      return;\n    }\n\n    this.userId = sanitizedId;\n    this.log('User ID updated to:', this.userId);\n\n    // Replace asterisks on the page\n    this.replaceUserIdAsterisks();\n  }\n\n  /**\n   * Replace all asterisks in user ID elements with the user's ID\n   */\n  private replaceUserIdAsterisks(): void {\n    if (!this.userId) {\n      this.log('No user ID available, skipping replacement');\n      return;\n    }\n\n    // Find all elements with the user ID selector\n    const elements = document.querySelectorAll(this.config.userIdSelector);\n\n    if (elements.length === 0) {\n      this.log('No user ID elements found with selector:', this.config.userIdSelector);\n      return;\n    }\n\n    this.log(`Found ${elements.length} user ID element(s) to update`);\n\n    elements.forEach((element) => {\n      const currentText = element.textContent || '';\n\n      // Check if the element contains asterisks\n      if (this.config.asteriskPattern.test(currentText)) {\n        // Replace asterisks with the user's ID\n        const newText = currentText.replace(this.config.asteriskPattern, this.userId!);\n        element.textContent = newText;\n\n        this.log(`Updated user ID element: \"${currentText}\" -> \"${newText}\"`);\n\n        // Add a class to indicate the element has been updated\n        element.classList.add('user-id-updated');\n      }\n    });\n  }\n\n  /**\n   * Activate the profile card by adding the active class\n   */\n  private activateProfileCard(): void {\n    // Find the profile card element\n    const profileCard = document.querySelector(this.config.profileCardSelector);\n\n    if (!profileCard) {\n      this.log('Profile card not found with selector:', this.config.profileCardSelector);\n      return;\n    }\n\n    // Add the active_fill class to the profile card\n    profileCard.classList.add(this.config.activeClass);\n    this.log(`Profile card activated with class: ${this.config.activeClass}`);\n\n    // Activate additional elements (e.g., .shadow-yellow, .visual-block-card)\n    // Note: These elements use 'active' class, not 'active_fill'\n    this.config.additionalActiveElements.forEach((selector) => {\n      const element = profileCard.querySelector(selector);\n      if (element) {\n        element.classList.add('active'); // Fixed: Use 'active' instead of activeClass\n        this.log(`Additional element activated: ${selector} with class 'active'`);\n      }\n    });\n  }\n\n  /**\n   * Manually set the user name (useful for testing or pre-filling)\n   */\n  public setUserName(name: string): void {\n    this.updateUserName(name);\n  }\n\n  /**\n   * Manually set the user ID (useful for testing or pre-filling)\n   */\n  public setUserId(id: string): void {\n    this.updateUserId(id);\n  }\n\n  /**\n   * Get the current user name\n   */\n  public getUserName(): string | null {\n    return this.userName;\n  }\n\n  /**\n   * Get the current user ID\n   */\n  public getUserId(): string | null {\n    return this.userId;\n  }\n\n  /**\n   * Reset the user name and user ID and restore asterisks\n   */\n  public reset(): void {\n    this.userName = null;\n    this.userId = null;\n    this.log('User name and ID reset');\n\n    // Optionally restore asterisks (if needed)\n    // This would require storing the original text\n  }\n\n  /**\n   * Log messages if debug mode is enabled\n   */\n  private log(...args: unknown[]): void {\n    if (this.config.debug) {\n      console.log('[TypebotNameReplacer]', ...args);\n    }\n  }\n\n  /**\n   * Destroy the name replacer and remove event listeners\n   */\n  public destroy(): void {\n    window.removeEventListener('message', this.handleMessage.bind(this));\n    this.isListening = false;\n    this.log('TypebotNameReplacer destroyed');\n  }\n}\n\n/**\n * Initialize the Typebot name replacer with default configuration\n */\nexport function initTypebotNameReplacer(config: NameReplacerConfig = {}): TypebotNameReplacer {\n  const replacer = new TypebotNameReplacer({\n    ...config,\n    debug: true, // Enable debug logging by default\n  });\n\n  replacer.init();\n\n  return replacer;\n}\n", "import { initCardInfoMapper } from '$utils/card-info-mapper';\nimport { initCardUpdates } from '$utils/card-updater';\nimport { greetUser } from '$utils/greet';\nimport { initLogoCardToggle } from '$utils/logo-card-toggle';\nimport { initProfileCardToggle } from '$utils/profile-card-toggle';\nimport { initSVGIllustration } from '$utils/svg-illustration-generator';\nimport { initSwiperController } from '$utils/swiper-controller';\nimport { initTypebotEmailHandler } from '$utils/typebot-email-handler';\nimport { initTypebotNameReplacer } from '$utils/typebot-name-replacer';\n\nwindow.Webflow ||= [];\nwindow.Webflow.push(() => {\n  const name = 'John Doe';\n  greetUser(name);\n\n  // Initialize card info mapper and start updates\n  const cardMapper = initCardInfoMapper();\n  initCardUpdates(cardMapper, 3000);\n\n  // Initialize profile card toggle interactions\n  initProfileCardToggle();\n\n  // Initialize Typebot name replacer\n  // This will listen for Typebot events and replace asterisks with the user's name\n  initTypebotNameReplacer({\n    targetSelector: '[card-info=\"name\"]',\n    debug: true, // Enable debug logging in development\n  });\n\n  // Initialize Typebot email handler\n  // This will listen for email completion and trigger card rotation animation\n  initTypebotEmailHandler({\n    profileCardSelector: '.profile-card_wrapper',\n    frontElementsSelector: '.front-elements',\n    rotationElementsSelector: '.rotation-elements',\n    emailSelector: '[card-info=\"email\"]',\n    phoneSelector: '[card-info=\"telefone\"]',\n    activeFillClass: 'active_fill',\n    rotateClass: 'rotate',\n    activeClass: 'active',\n    debug: true, // Enable debug logging in development\n  });\n\n  // Initialize logo card toggle\n  // This will allow users to toggle card rotation by clicking the Reino Capital logo\n  initLogoCardToggle({\n    logoSelector: '.logo_card',\n    debug: true, // Enable debug logging in development\n  });\n\n  // Initialize Swiper controller\n  // This will handle vertical slide transitions when Typebot form is completed\n  initSwiperController({\n    containerSelector: '.swiper.is-landingpage',\n    direction: 'vertical',\n    slidesPerView: 1,\n    allowTouchMove: false, // Disable user control\n    speed: 600, // Minimal transition effect\n    transitionDelay: 500, // Small delay for smoother experience\n    debug: true, // Enable debug logging in development\n  });\n\n  // Initialize SVG illustrations\n  // This will replace illustration divs with dynamic SVG shapes\n  initSVGIllustration({\n    debug: true, // Enable debug logging in development\n  });\n});\n"],
  "mappings": "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",
  "names": ["DEFAULT_CONFIG", "DEFAULT_CONFIG", "DEFAULT_CONFIG", "CustomEvent", "classes", "getComputedStyle", "window", "isObject", "extend", "window", "classes", "window", "window", "window", "document", "support", "observerUpdate", "events", "slide", "translate", "realIndex", "minTranslate", "maxTranslate", "transitionEnd", "browser", "slideTo", "setTranslate", "i", "increment", "breakpoints", "extend", "DEFAULT_CONFIG", "DEFAULT_CONFIG", "DEFAULT_CONFIG"]
}
